{"version":3,"sources":["webpack://GSD/webpack/universalModuleDefinition","webpack://GSD/webpack/bootstrap","webpack://GSD/./node_modules/ml-matrix/src/matrix.js","webpack://GSD/./node_modules/ml-matrix/src/views/base.js","webpack://GSD/./node_modules/ml-matrix/src/index.js","webpack://GSD/./node_modules/ml-matrix/src/util.js","webpack://GSD/./node_modules/ml-stat/index.js","webpack://GSD/./node_modules/ml-matrix/src/dc/util.js","webpack://GSD/./node_modules/ml-stat/array.js","webpack://GSD/./node_modules/ml-optimize-lorentzian/src/index.js","webpack://GSD/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://GSD/./node_modules/ml-matrix/src/dc/lu.js","webpack://GSD/./node_modules/ml-matrix/src/dc/svd.js","webpack://GSD/./node_modules/ml-curve-fitting/src/algebra.js","webpack://GSD/./src/index.js","webpack://GSD/./src/gsd.js","webpack://GSD/./node_modules/ml-savitzky-golay-generalized/src/index.js","webpack://GSD/./node_modules/extend/index.js","webpack://GSD/./node_modules/ml-stat/matrix.js","webpack://GSD/./src/post/optimizePeaks.js","webpack://GSD/./node_modules/ml-curve-fitting/src/index.js","webpack://GSD/./node_modules/ml-curve-fitting/src/LM.js","webpack://GSD/./node_modules/ml-matrix/src/symbol-species.js","webpack://GSD/./node_modules/ml-array-utils/src/index.js","webpack://GSD/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://GSD/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://GSD/./node_modules/ml-array-utils/src/snv.js","webpack://GSD/./node_modules/ml-matrix/src/views/transpose.js","webpack://GSD/./node_modules/ml-matrix/src/views/row.js","webpack://GSD/./node_modules/ml-matrix/src/views/sub.js","webpack://GSD/./node_modules/ml-matrix/src/views/selection.js","webpack://GSD/./node_modules/ml-matrix/src/views/column.js","webpack://GSD/./node_modules/ml-matrix/src/views/flipRow.js","webpack://GSD/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://GSD/./node_modules/ml-matrix/src/decompositions.js","webpack://GSD/./node_modules/ml-matrix/src/dc/evd.js","webpack://GSD/./node_modules/ml-matrix/src/dc/qr.js","webpack://GSD/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://GSD/./src/post/joinBroadPeaks.js","webpack://GSD/./src/post/broadenPeaks.js"],"names":["require","abstractMatrix","util","Matrix","Array","constructor","nRows","nColumns","i","arguments","length","isMatrix","clone","Number","isInteger","TypeError","isArray","matrix","RangeError","concat","rows","columns","set","rowIndex","columnIndex","value","get","newMatrix","Symbol","species","row","column","removeRow","index","checkRowIndex","splice","addRow","array","undefined","checkRowVector","removeColumn","checkColumnIndex","addColumn","checkColumnVector","exports","BaseView","module","Decompositions","DC","outer","max","vector","to1DArray","checkIndices","rowIndices","columnIndices","rowOut","some","r","columnOut","c","from","checkRange","startRow","endRow","startColumn","endColumn","notAllNumbers","slice","arg","getRange","to","arr","sumByRow","sum","zeros","j","sumByColumn","sumAll","v","hypotenuse","a","b","Math","abs","sqrt","getEmpty2DArray","getFilled2DArray","compareNumbers","values","l","min","minMax","arithmeticMean","mean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","sort","k","floor","harmonicMean","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","standardError","robustMeanAndStdev","y","stdev","averageDeviations","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","LM","math","algebra","sumOfLorentzians","t","p","nL","factor","p2","cols","sumOfGaussians","exp","singleLorentzian","singleGaussian","factor2","optimizeSingleLorentzian","xy","peak","opts","xy2","parseData","percentage","y_data","maxY","nbPoints","weight","dot","Object","create","LMOptions","consts","dt","dx","p_init","width","p_min","p_max","p_fit","optimize","optimizeSingleGaussian","optimizeLorentzianTrain","group","currentIndex","nextX","tI","yI","current","push","optimizeGaussianTrain","optimizeLorentzianSum","optimizeGaussianSum","threshold","nbSeries","transpose","sizeException","LuDecomposition","SvDecomposition","arrayUtils","MatrixTransposeView","MatrixRowView","MatrixSubView","MatrixSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","from1DArray","newRows","newColumns","newData","rowVector","columnVector","empty","fill","ones","rand","rng","random","randInt","eye","diag","data","matrix1","matrix2","checkMatrix","klass","size","apply","callback","ii","jj","call","to2DArray","copy","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","Error","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","by","prod","mmul","other","console","warn","m","Bcolj","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","scale","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","det","d","subMatrix0","subMatrix1","subMatrix2","determinant","pseudoInverse","EPSILON","svdSolution","autoTranspose","U","leftSingularVectors","V","rightSingularVectors","diagonal","prototype","checkDimensions","otherMatrix","identity","negate","tensorProduct","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","inplaceMethodWithArgs","staticMethodWithArgs","inplaceMethodWithOneArgScalar","inplaceMethodWithOneArgMatrix","inplaceMethodWithOneArg","staticMethodWithOneArg","operators","operator","inplaceOp","eval","fillTemplateFunction","name","op","inplaceOpS","inplaceOpM","staticOp","methods","forEach","mathMethod","method","inplaceMeth","staticMeth","methodsWithArgs","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","replace","RegExp","lu","pivotVector","pivotSign","LUrowi","LUcolj","kmax","LU","isSingular","col","lowerTriangularMatrix","X","upperTriangularMatrix","pivotPermutationVector","solve","SingularValueDecomposition","options","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","swapped","aux","e","work","nct","nrt","ks","f","cs","sn","kase","sp","spm1","epm1","sk","ek","shift","pp","iter","tmp","condition","norm2","rank","tol","diagonalMatrix","Y","scols","Ls","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","A","B","subtract","multiply","dotMultiply","dotDivide","div","dotPow","inv","gsd","post","optimizePeaks","joinBroadPeaks","broadenPeaks","SG","defaultOptions","sgOptions","windowSize","polynomial","minMaxRatio","broadRatio","maxCriteria","smoothY","realTopDetection","heightFactor","boundaries","derivativeThreshold","yIn","assign","maxDx","minDx","MAX_VALUE","noiseLevel","getNoiseLevel","yCorrection","dY","ddY","derivative","maxDdy","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","signals","signalsLen","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","soft","left","right","yLeft","yRight","height","base","stddev","peakList","alpha","beta","gamma","currentPoint","log10","extend","stat","SavitzkyGolay","h","np","ans","fullWeights","hs","constantH","toString","wg1","wg2","d1","d2","getHs","wg","GramPoly","Grampoly","GenFact","gf","Weight","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","key","setProperty","target","enumerable","configurable","newValue","writable","getProperty","src","copyIsArray","deep","arrayStat","Infinity","l1","l2","dimension","N","theSum","product","theProduct","sum1","sum2","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","correlation","scores","zScores","cor","resultRow","sourceRow","isNaN","weightSum","weightedCovariance","s1","weightedScatter","sampleFunction","lastIndex","sampleX","sampleY","direction","sign","delta","mid","stop","fnType","groups","groupPeaks","sampling","error","peaks","limits","optPeaks","optPeak","upperLimit","lowerLimit","DEBUG","func","y_dat","dp","tensor_parameter","iteration","Npar","Npnt","p_old","y_old","X2","X2_old","J","length_t","length_y_dat","corr","sigma_p","sigma_y","R_sq","cvg_hist","prnt","MaxIter","epsilon_1","epsilon_2","epsilon_3","epsilon_4","lambda_0","lambda_UP_fac","lambda_DN_fac","Update_Type","dp_array","Nfit","weight_sq","lm_matx","JtWJ","JtWdy","Chi_sq","y_hat","lambda","hidx","p_try","delta_y","X2_try","JtWdy_th","rho","dX2","lm_FD_J","ps","del","y1","lm_Broyden_J","h_t","Jt","for","getEquallySpacedData","SNV","Stat","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","coordMatrixToCoordArray","coordMatrix","coodinatesArray","resultMatrix","pointsToCoordArray","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","input","currentMin","coordMatrixToPoints","pointsToCoordMatrix","reverse","xLength","isFinite","numberOfPoints","algorithm","variant","output","getEquallySpacedSlot","getEquallySpacedSmooth","step","halfStep","start","initialOriginalStep","lastOriginalStep","previousX","MIN_VALUE","previousY","nextY","currentValue","slope","intercept","sumAtMin","sumAtMax","getSlope","x0","y0","x1","main","integral","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","std","EigenvalueDecomposition","QrDecomposition","CholeskyDecomposition","leftHandSide","rightHandSide","SVD","EVD","QR","CHO","assumeSymmetric","tred2","tql2","H","ort","orthes","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","hh","dl1","c3","el1","tst1","low","high","nn","exshift","norm","ra","sa","vr","vi","notlast","cdivres","cdiv","xr","xi","yr","yi","qr","rdiag","nrm","Rdiag","isFullRank","orthogonalMatrix","positiveDefinite","Lrowj","Lrowk","L","Opt","broadLines","maxI","candidates","indexes","fitted","overlap","nextPeak"],"mappings":"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","file":"ml-gsd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GSD\"] = factory();\n\telse\n\t\troot[\"GSD\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict';\n\nrequire('./symbol-species');\nvar abstractMatrix = require('./abstractMatrix');\nvar util = require('./util');\n\nclass Matrix extends abstractMatrix(Array) {\n    constructor(nRows, nColumns) {\n        var i;\n        if (arguments.length === 1 && typeof nRows === 'number') {\n            return new Array(nRows);\n        }\n        if (Matrix.isMatrix(nRows)) {\n            return nRows.clone();\n        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix\n            super(nRows);\n            if (Number.isInteger(nColumns) && nColumns > 0) {\n                for (i = 0; i < nRows; i++) {\n                    this[i] = new Array(nColumns);\n                }\n            } else {\n                throw new TypeError('nColumns must be a positive integer');\n            }\n        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array\n            const matrix = nRows;\n            nRows = matrix.length;\n            nColumns = matrix[0].length;\n            if (typeof nColumns !== 'number' || nColumns === 0) {\n                throw new TypeError('Data must be a 2D array with at least one element');\n            }\n            super(nRows);\n            for (i = 0; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new RangeError('Inconsistent array dimensions');\n                }\n                this[i] = [].concat(matrix[i]);\n            }\n        } else {\n            throw new TypeError('First argument must be a positive number or an array');\n        }\n        this.rows = nRows;\n        this.columns = nColumns;\n        return this;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this[rowIndex][columnIndex] = value;\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this[rowIndex][columnIndex];\n    }\n\n    /**\n     * Creates an exact and independent copy of the matrix\n     * @return {Matrix}\n     */\n    clone() {\n        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n        for (var row = 0; row < this.rows; row++) {\n            for (var column = 0; column < this.columns; column++) {\n                newMatrix.set(row, column, this.get(row, column));\n            }\n        }\n        return newMatrix;\n    }\n\n    /**\n     * Removes a row from the given index\n     * @param {number} index - Row index\n     * @return {Matrix} this\n     */\n    removeRow(index) {\n        util.checkRowIndex(this, index);\n        if (this.rows === 1) {\n            throw new RangeError('A matrix cannot have less than one row');\n        }\n        this.splice(index, 1);\n        this.rows -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a row at the given index\n     * @param {number} [index = this.rows] - Row index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addRow(index, array) {\n        if (array === undefined) {\n            array = index;\n            index = this.rows;\n        }\n        util.checkRowIndex(this, index, true);\n        array = util.checkRowVector(this, array, true);\n        this.splice(index, 0, array);\n        this.rows += 1;\n        return this;\n    }\n\n    /**\n     * Removes a column from the given index\n     * @param {number} index - Column index\n     * @return {Matrix} this\n     */\n    removeColumn(index) {\n        util.checkColumnIndex(this, index);\n        if (this.columns === 1) {\n            throw new RangeError('A matrix cannot have less than one column');\n        }\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 1);\n        }\n        this.columns -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a column at the given index\n     * @param {number} [index = this.columns] - Column index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addColumn(index, array) {\n        if (typeof array === 'undefined') {\n            array = index;\n            index = this.columns;\n        }\n        util.checkColumnIndex(this, index, true);\n        array = util.checkColumnVector(this, array);\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 0, array[i]);\n        }\n        this.columns += 1;\n        return this;\n    }\n}\n\nexports.Matrix = Matrix;\nMatrix.abstractMatrix = abstractMatrix;\n","'use strict';\n\nvar abstractMatrix = require('../abstractMatrix');\nvar Matrix = require('../matrix');\n\nclass BaseView extends abstractMatrix() {\n    constructor(matrix, rows, columns) {\n        super();\n        this.matrix = matrix;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    static get [Symbol.species]() {\n        return Matrix.Matrix;\n    }\n}\n\nmodule.exports = BaseView;\n","'use strict';\n\nmodule.exports = require('./matrix').Matrix;\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n","'use strict';\n\nvar Matrix = require('./matrix');\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkRowIndex = function checkRowIndex(matrix, index, outer) {\n    var max = outer ? matrix.rows : matrix.rows - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Row index out of range');\n    }\n};\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {\n    var max = outer ? matrix.columns : matrix.columns - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Column index out of range');\n    }\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkRowVector = function checkRowVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.columns) {\n        throw new RangeError('vector size must be the same as the number of columns');\n    }\n    return vector;\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkColumnVector = function checkColumnVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.rows) {\n        throw new RangeError('vector size must be the same as the number of rows');\n    }\n    return vector;\n};\n\nexports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {\n    var rowOut = rowIndices.some(r => {\n        return r < 0 || r >= matrix.rows;\n\n    });\n\n    var columnOut = columnIndices.some(c => {\n        return c < 0 || c >= matrix.columns;\n    });\n\n    if (rowOut || columnOut) {\n        throw new RangeError('Indices are out of range');\n    }\n\n    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {\n        throw new TypeError('Unexpected type for row/column indices');\n    }\n    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);\n\n    return {\n        row: rowIndices,\n        column: columnIndices\n    };\n};\n\nexports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n    if (arguments.length !== 5) throw new TypeError('Invalid argument type');\n    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {\n        return typeof arg !== 'number';\n    });\n    if (notAllNumbers) throw new TypeError('Invalid argument type');\n    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n        throw new RangeError('Submatrix indices are out of range');\n    }\n};\n\nexports.getRange = function getRange(from, to) {\n    var arr = new Array(to - from + 1);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = from + i;\n    }\n    return arr;\n};\n\nexports.sumByRow = function sumByRow(matrix) {\n    var sum = Matrix.Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumByColumn = function sumByColumn(matrix) {\n    var sum = Matrix.Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumAll = function sumAll(matrix) {\n    var v = 0;\n    for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n            v += matrix.get(i, j);\n        }\n    }\n    return v;\n};\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nexports.hypotenuse = function hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n};\n\n// For use in the decomposition algorithms. With big matrices, access time is\n// too long on elements from array subclass\n// todo check when it is fixed in v8\n// http://jsperf.com/access-and-write-array-subclass\nexports.getEmpty2DArray = function (rows, columns) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n    }\n    return array;\n};\n\nexports.getFilled2DArray = function (rows, columns, value) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n        for (var j = 0; j < columns; j++) {\n            array[i][j] = value;\n        }\n    }\n    return array;\n};\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nvar LM = require('ml-curve-fitting');\nvar math = LM.Matrix.algebra;\nvar Matrix = require('ml-matrix');\n\n/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfLorentzians(t,p,c){\n    var nL = p.length/3,factor,i, j,p2, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        p2 = Math.pow(p[i+nL*2][0]/2,2);\n        factor = p[i+nL][0]*p2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=factor/(Math.pow(t[j][0]-p[i][0],2)+p2);\n        }\n    }\n    return result;\n}\n\n/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfGaussians(t,p,c){\n    var nL = p.length/3,factor,i, j, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        factor = p[i+nL*2][0]*p[i+nL*2][0]/2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=p[i+nL][0]*Math.exp(-(t[i][0]-p[i][0])*(t[i][0]-p[i][0])/factor);\n        }\n    }\n    return result;\n}\n/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleLorentzian(t,p,c){\n    var factor = p[1][0]*Math.pow(p[2][0]/2,2);\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=factor/(Math.pow(t[i][0]-p[0][0],2)+Math.pow(p[2][0]/2,2));\n    }\n    return result;\n}\n\n/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleGaussian(t,p,c){\n    var factor2 = p[2][0]*p[2][0]/2;\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=p[1][0]*Math.exp(-(t[i][0]-p[0][0])*(t[i][0]-p[0][0])/factor2);\n    }\n    return result;\n}\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleLorentzian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];\n    var dt = Math.abs(t[0][0]-t[1][0]);// optional vector of constants\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n\n    var p_fit = LM.optimize(singleLorentzian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n\n\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n\n}\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleGaussian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n\n    var nbPoints = t.rows, i;\n\n\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];                         // optional vector of constants\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n\n    var dx = new Matrix([[-Math.abs(t[0][0]-t[1][0])/1000],[-1e-3],[-peak.width/1000]]);\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n    //var p_min = new Matrix([[peak.x-peak.width/4],[0.75],[peak.width/3]]);\n    //var p_max = new Matrix([[peak.x+peak.width/4],[1.25],[peak.width*3]]);\n\n    var p_fit = LM.optimize(singleGaussian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n}\n\n/*\n peaks on group should sorted\n */\nfunction optimizeLorentzianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleLorentzian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n\n}\n\nfunction optimizeGaussianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleGaussian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n}\n\n\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeLorentzianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / math.sqrt(y_data.dot(y_data))];\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ]);\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = 1;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;//-group[i].width/4;\n        p_min[i+nL][0] = 0;\n        p_min[i+2*nL][0] = group[i].width/4;\n\n        p_max[i][0] = group[i].x+dt;//+group[i].width/4;\n        p_max[i+nL][0] = 1.5;\n        p_max[i+2*nL][0] = group[i].width*4;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n\n    var dx = -Math.abs(t[0][0]-t[1][0])/10000;\n    var p_fit = LM.optimize(sumOfLorentzians, p_init, t, y_data, weight, dx, p_min, p_max, consts, opts);\n    p_fit=p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeGaussianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows,i;\n\n    var weight = new Matrix(nbPoints,1);//[nbPoints / math.sqrt(y_data.dot(y_data))];\n    var k = nbPoints / math.sqrt(y_data.dot(y_data));\n    for(i=0;i<nbPoints;i++){\n        weight[i][0]=k;///(y_data[i][0]);\n        //weight[i][0]=k*(2-y_data[i][0]);\n    }\n\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        2 ]);\n    //var opts=[  3,    100, 1e-5, 1e-6, 1e-6, 1e-6, 1e-6,    11,    9,        1 ];\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = group[i].y/maxY;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;\n        p_min[i+nL][0] = group[i].y*0.8/maxY;\n        p_min[i+2*nL][0] = group[i].width/2;\n\n        p_max[i][0] = group[i].x+dt;\n        p_max[i+nL][0] = group[i].y*1.2/maxY;\n        p_max[i+2*nL][0] = group[i].width*2;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n    //console.log(t);\n    var p_fit = LM.optimize(sumOfLorentzians,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n/**\n *\n * Converts the given input to the required x, y column matrices. y data is normalized to max(y)=1\n * @param xy\n * @returns {*[]}\n */\nfunction parseData(xy, threshold){\n    var nbSeries = xy.length;\n    var t = null;\n    var y_data = null, x,y;\n    var maxY = 0, i,j;\n\n    if(nbSeries==2){\n        //Looks like row wise matrix [x,y]\n        var nbPoints = xy[0].length;\n        //if(nbPoints<3)\n        //    throw new Exception(nbPoints);\n        //else{\n        t = new Array(nbPoints);//new Matrix(nbPoints,1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints,1);\n        x = xy[0];\n        y = xy[1];\n        if(typeof x[0] === \"number\"){\n            for(i=0;i<nbPoints;i++){\n                t[i]=x[i];\n                y_data[i]=y[i];\n                if(y[i]>maxY)\n                    maxY = y[i];\n            }\n        }\n        else{\n            //It is a colum matrix\n            if(typeof x[0] === \"object\"){\n                for(i=0;i<nbPoints;i++){\n                    t[i]=x[i][0];\n                    y_data[i]=y[i][0];\n                    if(y[i][0]>maxY)\n                        maxY = y[i][0];\n                }\n            }\n\n        }\n\n        //}\n    }\n    else{\n        //Looks like a column wise matrix [[x],[y]]\n        var nbPoints = nbSeries;\n        //if(nbPoints<3)\n        //    throw new SizeException(nbPoints);\n        //else {\n        t = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        for (i = 0; i < nbPoints; i++) {\n            t[i] = xy[i][0];\n            y_data[i] = xy[i][1];\n            if(y_data[i]>maxY)\n                maxY = y_data[i];\n        }\n        //}\n    }\n    for (i = 0; i < nbPoints; i++) {\n        y_data[i]/=maxY;\n    }\n    if(threshold){\n        for (i = nbPoints-1; i >=0; i--) {\n            if(y_data[i]<threshold) {\n                y_data.splice(i,1);\n                t.splice(i,1);\n            }\n        }\n    }\n    if(t.length>0)\n        return [(new Matrix([t])).transpose(),(new Matrix([y_data])).transpose(),maxY];\n    return null;\n}\n\nfunction sizeException(nbPoints) {\n    return new RangeError(\"Not enough points to perform the optimization: \"+nbPoints +\"< 3\");\n}\n\nmodule.exports.optimizeSingleLorentzian = optimizeSingleLorentzian;\nmodule.exports.optimizeLorentzianSum = optimizeLorentzianSum;\nmodule.exports.optimizeSingleGaussian = optimizeSingleGaussian;\nmodule.exports.optimizeGaussianSum = optimizeGaussianSum;\nmodule.exports.singleGaussian = singleGaussian;\nmodule.exports.singleLorentzian = singleLorentzian;\nmodule.exports.optimizeGaussianTrain = optimizeGaussianTrain;\nmodule.exports.optimizeLorentzianTrain = optimizeLorentzianTrain;","'use strict';\n\nmodule.exports = abstractMatrix;\n\nvar LuDecomposition = require('./dc/lu');\nvar SvDecomposition = require('./dc/svd');\nvar arrayUtils = require('ml-array-utils');\nvar util = require('./util');\nvar MatrixTransposeView = require('./views/transpose');\nvar MatrixRowView = require('./views/row');\nvar MatrixSubView = require('./views/sub');\nvar MatrixSelectionView = require('./views/selection');\nvar MatrixColumnView = require('./views/column');\nvar MatrixFlipRowView = require('./views/flipRow');\nvar MatrixFlipColumnView = require('./views/flipColumn');\n\nfunction abstractMatrix(superCtor) {\n    if (superCtor === undefined) superCtor = Object;\n\n    /**\n     * Real matrix\n     * @class Matrix\n     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n     * 2D array containing the data or Matrix instance to clone\n     * @param {number} [nColumns] - Number of columns of the new matrix\n     */\n    class Matrix extends superCtor {\n        static get [Symbol.species]() {\n            return this;\n        }\n\n        /**\n         * Constructs a Matrix with the chosen dimensions from a 1D array\n         * @param {number} newRows - Number of rows\n         * @param {number} newColumns - Number of columns\n         * @param {Array} newData - A 1D array containing data for the matrix\n         * @return {Matrix} - The new matrix\n         */\n        static from1DArray(newRows, newColumns, newData) {\n            var length = newRows * newColumns;\n            if (length !== newData.length) {\n                throw new RangeError('Data length does not match given dimensions');\n            }\n            var newMatrix = new this(newRows, newColumns);\n            for (var row = 0; row < newRows; row++) {\n                for (var column = 0; column < newColumns; column++) {\n                    newMatrix.set(row, column, newData[row * newColumns + column]);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static rowVector(newData) {\n            var vector = new this(1, newData.length);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(0, i, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static columnVector(newData) {\n            var vector = new this(newData.length, 1);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(i, 0, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static empty(rows, columns) {\n            return new this(rows, columns);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static zeros(rows, columns) {\n            return this.empty(rows, columns).fill(0);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static ones(rows, columns) {\n            return this.empty(rows, columns).fill(1);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static rand(rows, columns, rng) {\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    matrix.set(i, j, rng());\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static randInt(rows, columns, maxValue, rng) {\n            if (maxValue === undefined) maxValue = 1000;\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = Math.floor(rng() * maxValue);\n                    matrix.set(i, j, value);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n        static eye(rows, columns, value) {\n            if (columns === undefined) columns = rows;\n            if (value === undefined) value = 1;\n            var min = Math.min(rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, value);\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n        static diag(data, rows, columns) {\n            var l = data.length;\n            if (rows === undefined) rows = l;\n            if (columns === undefined) columns = rows;\n            var min = Math.min(l, rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, data[i]);\n            }\n            return matrix;\n        }\n\n        /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static min(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static max(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n        static checkMatrix(value) {\n            return Matrix.isMatrix(value) ? value : new this(value);\n        }\n\n        /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n        static isMatrix(value) {\n            return (value != null) && (value.klass === 'Matrix');\n        }\n\n        /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n        get size() {\n            return this.rows * this.columns;\n        }\n\n        /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n        apply(callback) {\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback must be a function');\n            }\n            var ii = this.rows;\n            var jj = this.columns;\n            for (var i = 0; i < ii; i++) {\n                for (var j = 0; j < jj; j++) {\n                    callback.call(this, i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n        to1DArray() {\n            var array = new Array(this.size);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    array[i * this.columns + j] = this.get(i, j);\n                }\n            }\n            return array;\n        }\n\n        /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n        to2DArray() {\n            var copy = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                copy[i] = new Array(this.columns);\n                for (var j = 0; j < this.columns; j++) {\n                    copy[i][j] = this.get(i, j);\n                }\n            }\n            return copy;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row\n         */\n        isRowVector() {\n            return this.rows === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one column\n         */\n        isColumnVector() {\n            return this.columns === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n        isVector() {\n            return (this.rows === 1) || (this.columns === 1);\n        }\n\n        /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n        isSquare() {\n            return this.rows === this.columns;\n        }\n\n        /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n        isSymmetric() {\n            if (this.isSquare()) {\n                for (var i = 0; i < this.rows; i++) {\n                    for (var j = 0; j <= i; j++) {\n                        if (this.get(i, j) !== this.get(j, i)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n        set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n            throw new Error('set method is unimplemented');\n        }\n\n        /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n        get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n            throw new Error('get method is unimplemented');\n        }\n\n        /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n        repeat(rowRep, colRep) {\n            rowRep = rowRep || 1;\n            colRep = colRep || 1;\n            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n            for (var i = 0; i < rowRep; i++) {\n                for (var j = 0; j < colRep; j++) {\n                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n        fill(value) {\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, value);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n        neg() {\n            return this.mulS(-1);\n        }\n\n        /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n        getRow(index) {\n            util.checkRowIndex(this, index);\n            var row = new Array(this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                row[i] = this.get(index, i);\n            }\n            return row;\n        }\n\n        /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n        getRowVector(index) {\n            return this.constructor.rowVector(this.getRow(index));\n        }\n\n        /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setRow(index, array) {\n            util.checkRowIndex(this, index);\n            array = util.checkRowVector(this, array);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n        swapRows(row1, row2) {\n            util.checkRowIndex(this, row1);\n            util.checkRowIndex(this, row2);\n            for (var i = 0; i < this.columns; i++) {\n                var temp = this.get(row1, i);\n                this.set(row1, i, this.get(row2, i));\n                this.set(row2, i, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n        getColumn(index) {\n            util.checkColumnIndex(this, index);\n            var column = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                column[i] = this.get(i, index);\n            }\n            return column;\n        }\n\n        /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n        getColumnVector(index) {\n            return this.constructor.columnVector(this.getColumn(index));\n        }\n\n        /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setColumn(index, array) {\n            util.checkColumnIndex(this, index);\n            array = util.checkColumnVector(this, array);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n        swapColumns(column1, column2) {\n            util.checkColumnIndex(this, column1);\n            util.checkColumnIndex(this, column2);\n            for (var i = 0; i < this.rows; i++) {\n                var temp = this.get(i, column1);\n                this.set(i, column1, this.get(i, column2));\n                this.set(i, column2, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulRow(index, value) {\n            util.checkRowIndex(this, index);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, this.get(index, i) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulColumn(index, value) {\n            util.checkColumnIndex(this, index);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, this.get(i, index) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n        max() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n        maxIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n        min() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n        minIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        maxRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        maxRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        minRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        minRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        maxColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        maxColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        minColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        minColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n        diag() {\n            var min = Math.min(this.rows, this.columns);\n            var diag = new Array(min);\n            for (var i = 0; i < min; i++) {\n                diag[i] = this.get(i, i);\n            }\n            return diag;\n        }\n\n        /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n        sum(by) {\n            switch (by) {\n                case 'row':\n                    return util.sumByRow(this);\n                case 'column':\n                    return util.sumByColumn(this);\n                default:\n                    return util.sumAll(this);\n            }\n        }\n\n        /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n        mean() {\n            return this.sum() / this.size;\n        }\n\n        /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n        prod() {\n            var prod = 1;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    prod *= this.get(i, j);\n                }\n            }\n            return prod;\n        }\n\n        /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n        cumulativeSum() {\n            var sum = 0;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    sum += this.get(i, j);\n                    this.set(i, j, sum);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n        dot(vector2) {\n            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n            var vector1 = this.to1DArray();\n            if (vector1.length !== vector2.length) {\n                throw new RangeError('vectors do not have the same size');\n            }\n            var dot = 0;\n            for (var i = 0; i < vector1.length; i++) {\n                dot += vector1[i] * vector2[i];\n            }\n            return dot;\n        }\n\n        /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        mmul(other) {\n            other = this.constructor.checkMatrix(other);\n            if (this.columns !== other.rows) {\n                // eslint-disable-next-line no-console\n                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n            }\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.columns;\n\n            var result = new this.constructor[Symbol.species](m, p);\n\n            var Bcolj = new Array(n);\n            for (var j = 0; j < p; j++) {\n                for (var k = 0; k < n; k++) {\n                    Bcolj[k] = other.get(k, j);\n                }\n\n                for (var i = 0; i < m; i++) {\n                    var s = 0;\n                    for (k = 0; k < n; k++) {\n                        s += this.get(i, k) * Bcolj[k];\n                    }\n\n                    result.set(i, j, s);\n                }\n            }\n            return result;\n        }\n\n        strassen2x2(other) {\n            var result = new this.constructor[Symbol.species](2, 2);\n            const a11 = this.get(0, 0);\n            const b11 = other.get(0, 0);\n            const a12 = this.get(0, 1);\n            const b12 = other.get(0, 1);\n            const a21 = this.get(1, 0);\n            const b21 = other.get(1, 0);\n            const a22 = this.get(1, 1);\n            const b22 = other.get(1, 1);\n\n            // Compute intermediate values.\n            const m1 = (a11 + a22) * (b11 + b22);\n            const m2 = (a21 + a22) * b11;\n            const m3 = a11 * (b12 - b22);\n            const m4 = a22 * (b21 - b11);\n            const m5 = (a11 + a12) * b22;\n            const m6 = (a21 - a11) * (b11 + b12);\n            const m7 = (a12 - a22) * (b21 + b22);\n\n            // Combine intermediate values into the output.\n            const c00 = m1 + m4 - m5 + m7;\n            const c01 = m3 + m5;\n            const c10 = m2 + m4;\n            const c11 = m1 - m2 + m3 + m6;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            return result;\n        }\n\n        strassen3x3(other) {\n            var result = new this.constructor[Symbol.species](3, 3);\n\n            const a00 = this.get(0, 0);\n            const a01 = this.get(0, 1);\n            const a02 = this.get(0, 2);\n            const a10 = this.get(1, 0);\n            const a11 = this.get(1, 1);\n            const a12 = this.get(1, 2);\n            const a20 = this.get(2, 0);\n            const a21 = this.get(2, 1);\n            const a22 = this.get(2, 2);\n\n            const b00 = other.get(0, 0);\n            const b01 = other.get(0, 1);\n            const b02 = other.get(0, 2);\n            const b10 = other.get(1, 0);\n            const b11 = other.get(1, 1);\n            const b12 = other.get(1, 2);\n            const b20 = other.get(2, 0);\n            const b21 = other.get(2, 1);\n            const b22 = other.get(2, 2);\n\n            const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n            const m2 = (a00 - a10) * (-b01 + b11);\n            const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n            const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n            const m5 = (a10 + a11) * (-b00 + b01);\n            const m6 = a00 * b00;\n            const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n            const m8 = (-a00 + a20) * (b02 - b12);\n            const m9 = (a20 + a21) * (-b00 + b02);\n            const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n            const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n            const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n            const m13 = (a02 - a22) * (b11 - b21);\n            const m14 = a02 * b20;\n            const m15 = (a21 + a22) * (-b20 + b21);\n            const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n            const m17 = (a02 - a12) * (b12 - b22);\n            const m18 = (a11 + a12) * (-b20 + b22);\n            const m19 = a01 * b10;\n            const m20 = a12 * b21;\n            const m21 = a10 * b02;\n            const m22 = a20 * b01;\n            const m23 = a22 * b22;\n\n            const c00 = m6 + m14 + m19;\n            const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n            const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n            const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n            const c11 = m2 + m4 + m5 + m6 + m20;\n            const c12 = m14 + m16 + m17 + m18 + m21;\n            const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n            const c21 = m12 + m13 + m14 + m15 + m22;\n            const c22 = m6 + m7 + m8 + m9 + m23;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(0, 2, c02);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            result.set(1, 2, c12);\n            result.set(2, 0, c20);\n            result.set(2, 1, c21);\n            result.set(2, 2, c22);\n            return result;\n        }\n\n        /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n        mmulStrassen(y) {\n            var x = this.clone();\n            var r1 = x.rows;\n            var c1 = x.columns;\n            var r2 = y.rows;\n            var c2 = y.columns;\n            if (c1 !== r2) {\n                // eslint-disable-next-line no-console\n                console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n            }\n\n            // Put a matrix into the top left of a matrix of zeros.\n            // `rows` and `cols` are the dimensions of the output matrix.\n            function embed(mat, rows, cols) {\n                var r = mat.rows;\n                var c = mat.columns;\n                if ((r === rows) && (c === cols)) {\n                    return mat;\n                } else {\n                    var resultat = Matrix.zeros(rows, cols);\n                    resultat = resultat.setSubMatrix(mat, 0, 0);\n                    return resultat;\n                }\n            }\n\n\n            // Make sure both matrices are the same size.\n            // This is exclusively for simplicity:\n            // this algorithm can be implemented with matrices of different sizes.\n\n            var r = Math.max(r1, r2);\n            var c = Math.max(c1, c2);\n            x = embed(x, r, c);\n            y = embed(y, r, c);\n\n            // Our recursive multiplication function.\n            function blockMult(a, b, rows, cols) {\n                // For small matrices, resort to naive multiplication.\n                if (rows <= 512 || cols <= 512) {\n                    return a.mmul(b); // a is equivalent to this\n                }\n\n                // Apply dynamic padding.\n                if ((rows % 2 === 1) && (cols % 2 === 1)) {\n                    a = embed(a, rows + 1, cols + 1);\n                    b = embed(b, rows + 1, cols + 1);\n                } else if (rows % 2 === 1) {\n                    a = embed(a, rows + 1, cols);\n                    b = embed(b, rows + 1, cols);\n                } else if (cols % 2 === 1) {\n                    a = embed(a, rows, cols + 1);\n                    b = embed(b, rows, cols + 1);\n                }\n\n                var halfRows = parseInt(a.rows / 2);\n                var halfCols = parseInt(a.columns / 2);\n                // Subdivide input matrices.\n                var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n                var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n                var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n                var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n                var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n                var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n                var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n                var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n                // Compute intermediate values.\n                var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n                var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n                var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n                var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n                var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n                var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n                var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n                // Combine intermediate values into the output.\n                var c11 = Matrix.add(m1, m4);\n                c11.sub(m5);\n                c11.add(m7);\n                var c12 = Matrix.add(m3, m5);\n                var c21 = Matrix.add(m2, m4);\n                var c22 = Matrix.sub(m1, m2);\n                c22.add(m3);\n                c22.add(m6);\n\n                //Crop output to the desired size (undo dynamic padding).\n                var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n                resultat = resultat.setSubMatrix(c11, 0, 0);\n                resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n                resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n                return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n            }\n            return blockMult(x, y, r, c);\n        }\n\n        /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n        scaleRows(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.rows; i++) {\n                var scaled = arrayUtils.scale(this.getRow(i), {min, max});\n                newMatrix.setRow(i, scaled);\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n        scaleColumns(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                var scaled = arrayUtils.scale(this.getColumn(i), {\n                    min: min,\n                    max: max\n                });\n                newMatrix.setColumn(i, scaled);\n            }\n            return newMatrix;\n        }\n\n\n        /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        kroneckerProduct(other) {\n            other = this.constructor.checkMatrix(other);\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.rows;\n            var q = other.columns;\n\n            var result = new this.constructor[Symbol.species](m * p, n * q);\n            for (var i = 0; i < m; i++) {\n                for (var j = 0; j < n; j++) {\n                    for (var k = 0; k < p; k++) {\n                        for (var l = 0; l < q; l++) {\n                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n        transpose() {\n            var result = new this.constructor[Symbol.species](this.columns, this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    result.set(j, i, this.get(i, j));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortRows(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.rows; i++) {\n                this.setRow(i, this.getRow(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortColumns(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.columns; i++) {\n                this.setColumn(i, this.getColumn(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n        subMatrix(startRow, endRow, startColumn, endColumn) {\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n            for (var i = startRow; i <= endRow; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n        subMatrixRow(indices, startColumn, endColumn) {\n            if (startColumn === undefined) startColumn = 0;\n            if (endColumn === undefined) endColumn = this.columns - 1;\n            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.rows) {\n                        throw new RangeError('Row index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n        subMatrixColumn(indices, startRow, endRow) {\n            if (startRow === undefined) startRow = 0;\n            if (endRow === undefined) endRow = this.rows - 1;\n            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startRow; j <= endRow; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.columns) {\n                        throw new RangeError('Column index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n        setSubMatrix(matrix, startRow, startColumn) {\n            matrix = this.constructor.checkMatrix(matrix);\n            var endRow = startRow + matrix.rows - 1;\n            var endColumn = startColumn + matrix.columns - 1;\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            for (var i = 0; i < matrix.rows; i++) {\n                for (var j = 0; j < matrix.columns; j++) {\n                    this[startRow + i][startColumn + j] = matrix.get(i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n        selection(rowIndices, columnIndices) {\n            var indices = util.checkIndices(this, rowIndices, columnIndices);\n            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n            for (var i = 0; i < indices.row.length; i++) {\n                var rowIndex = indices.row[i];\n                for (var j = 0; j < indices.column.length; j++) {\n                    var columnIndex = indices.column[j];\n                    newMatrix[i][j] = this.get(rowIndex, columnIndex);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n        trace() {\n            var min = Math.min(this.rows, this.columns);\n            var trace = 0;\n            for (var i = 0; i < min; i++) {\n                trace += this.get(i, i);\n            }\n            return trace;\n        }\n\n        /*\n         Matrix views\n         */\n\n        /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n        transposeView() {\n            return new MatrixTransposeView(this);\n        }\n\n        /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n        rowView(row) {\n            util.checkRowIndex(this, row);\n            return new MatrixRowView(this, row);\n        }\n\n        /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n        columnView(column) {\n            util.checkColumnIndex(this, column);\n            return new MatrixColumnView(this, column);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n        flipRowView() {\n            return new MatrixFlipRowView(this);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n        flipColumnView() {\n            return new MatrixFlipColumnView(this);\n        }\n\n        /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n        subMatrixView(startRow, endRow, startColumn, endColumn) {\n            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n        }\n\n        /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n        selectionView(rowIndices, columnIndices) {\n            return new MatrixSelectionView(this, rowIndices, columnIndices);\n        }\n\n\n        /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n        det() {\n            if (this.isSquare()) {\n                var a, b, c, d;\n                if (this.columns === 2) {\n                    // 2 x 2 matrix\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(1, 0);\n                    d = this.get(1, 1);\n\n                    return a * d - (b * c);\n                } else if (this.columns === 3) {\n                    // 3 x 3 matrix\n                    var subMatrix0, subMatrix1, subMatrix2;\n                    subMatrix0 = this.selectionView([1, 2], [1, 2]);\n                    subMatrix1 = this.selectionView([1, 2], [0, 2]);\n                    subMatrix2 = this.selectionView([1, 2], [0, 1]);\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(0, 2);\n\n                    return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n                } else {\n                    // general purpose determinant using the LU decomposition\n                    return new LuDecomposition(this).determinant;\n                }\n\n            } else {\n                throw Error('Determinant can only be calculated for a square matrix.');\n            }\n        }\n\n        /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n        pseudoInverse(threshold) {\n            if (threshold === undefined) threshold = Number.EPSILON;\n            var svdSolution = new SvDecomposition(this, {autoTranspose: true});\n\n            var U = svdSolution.leftSingularVectors;\n            var V = svdSolution.rightSingularVectors;\n            var s = svdSolution.diagonal;\n\n            for (var i = 0; i < s.length; i++) {\n                if (Math.abs(s[i]) > threshold) {\n                    s[i] = 1.0 / s[i];\n                } else {\n                    s[i] = 0.0;\n                }\n            }\n\n            // convert list to diagonal\n            s = this.constructor[Symbol.species].diag(s);\n            return V.mmul(s.mmul(U.transposeView()));\n        }\n    }\n\n    Matrix.prototype.klass = 'Matrix';\n\n    /**\n     * @private\n     * Check that two matrices have the same dimensions\n     * @param {Matrix} matrix\n     * @param {Matrix} otherMatrix\n     */\n    function checkDimensions(matrix, otherMatrix) { // eslint-disable-line no-unused-vars\n        if (matrix.rows !== otherMatrix.rows ||\n            matrix.columns !== otherMatrix.columns) {\n            throw new RangeError('Matrices dimensions must be equal');\n        }\n    }\n\n    function compareNumbers(a, b) {\n        return a - b;\n    }\n\n    /*\n     Synonyms\n     */\n\n    Matrix.random = Matrix.rand;\n    Matrix.diagonal = Matrix.diag;\n    Matrix.prototype.diagonal = Matrix.prototype.diag;\n    Matrix.identity = Matrix.eye;\n    Matrix.prototype.negate = Matrix.prototype.neg;\n    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n    Matrix.prototype.determinant = Matrix.prototype.det;\n\n    /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n    var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n    var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n    var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n    var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n    var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var staticMethodWithOneArg = staticMethodWithArgs;\n\n    var operators = [\n        // Arithmetic operators\n        ['+', 'add'],\n        ['-', 'sub', 'subtract'],\n        ['*', 'mul', 'multiply'],\n        ['/', 'div', 'divide'],\n        ['%', 'mod', 'modulus'],\n        // Bitwise operators\n        ['&', 'and'],\n        ['|', 'or'],\n        ['^', 'xor'],\n        ['<<', 'leftShift'],\n        ['>>', 'signPropagatingRightShift'],\n        ['>>>', 'rightShift', 'zeroFillRightShift']\n    ];\n\n    var i;\n\n    for (var operator of operators) {\n        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));\n        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));\n        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));\n        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));\n        for (i = 1; i < operator.length; i++) {\n            Matrix.prototype[operator[i]] = inplaceOp;\n            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;\n            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;\n            Matrix[operator[i]] = staticOp;\n        }\n    }\n\n    var methods = [\n        ['~', 'not']\n    ];\n\n    [\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].forEach(function (mathMethod) {\n        methods.push(['Math.' + mathMethod, mathMethod]);\n    });\n\n    for (var method of methods) {\n        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));\n        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));\n        for (i = 1; i < method.length; i++) {\n            Matrix.prototype[method[i]] = inplaceMeth;\n            Matrix[method[i]] = staticMeth;\n        }\n    }\n\n    var methodsWithArgs = [\n        ['Math.pow', 1, 'pow']\n    ];\n\n    for (var methodWithArg of methodsWithArgs) {\n        var args = 'arg0';\n        for (i = 1; i < methodWithArg[1]; i++) {\n            args += `, arg${i}`;\n        }\n        if (methodWithArg[1] !== 1) {\n            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {\n                name: methodWithArg[2],\n                method: methodWithArg[0],\n                args: args\n            }));\n            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n                Matrix[methodWithArg[i]] = staticMethWithArgs;\n            }\n        } else {\n            var tmplVar = {\n                name: methodWithArg[2],\n                args: args,\n                method: methodWithArg[0]\n            };\n            var inplaceMethod2 = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n            var staticMethod2 = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;\n                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;\n                Matrix[methodWithArg[i]] = staticMethod2;\n            }\n        }\n    }\n\n    function fillTemplateFunction(template, values) {\n        for (var value in values) {\n            template = template.replace(new RegExp('%' + value + '%', 'g'), values[value]);\n        }\n        return template;\n    }\n\n    return Matrix;\n}\n","'use strict';\n\nvar Matrix = require('../matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    if (!(this instanceof LuDecomposition)) {\n        return new LuDecomposition(matrix);\n    }\n\n    matrix = Matrix.Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n}\n\nLuDecomposition.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare()) {\n            throw new Error('Matrix must be square');\n        }\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++) {\n            determinant *= data[j][j];\n        }\n        return determinant;\n    },\n    get lowerTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows) {\n            throw new Error('Invalid matrix dimensions');\n        }\n        if (this.isSingular()) {\n            throw new Error('LU matrix is singular');\n        }\n\n        var count = value.columns;\n        var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n        var columns = lu.columns;\n        var i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = LuDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix');\nvar util = require('./util');\nvar hypotenuse = util.hypotenuse;\nvar getFilled2DArray = util.getFilled2DArray;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    if (!(this instanceof SingularValueDecomposition)) {\n        return new SingularValueDecomposition(value, options);\n    }\n    value = Matrix.Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false) wantu = false;\n    if (options.computeRightSingularVectors === false) wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n        if (!autoTranspose) {\n            a = value.clone();\n            // eslint-disable-next-line no-console\n            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n        } else {\n            a = value.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    } else {\n        a = value.clone();\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = getFilled2DArray(m, nu, 0),\n        V = getFilled2DArray(n, n, 0),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0) {\n                    e[k] = 0 - e[k];\n                }\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n            // no default\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecomposition.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.U)) {\n            this.U = new Matrix.Matrix(this.U);\n        }\n        return this.U;\n    },\n    get rightSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.V)) {\n            this.V = new Matrix.Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            } else {\n                Ls[i][i] = 1 / this.s[i];\n            }\n        }\n\n        var U = this.U;\n        var V = this.rightSingularVectors;\n\n        var VL = V.mmul(Ls),\n            vrows = V.rows,\n            urows = U.length,\n            VLU = Matrix.Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.Matrix.diag(value));\n    },\n    inverse: function () {\n        var V = this.V;\n        var e = this.threshold,\n            vrows = V.length,\n            vcols = V[0].length,\n            X = new Matrix.Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = V[i][j] / this.s[j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n\n        var U = this.U;\n\n        var urows = U.length,\n            ucols = U[0].length,\n            Y = new Matrix.Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\nmodule.exports = SingularValueDecomposition;\n","/**\n * Created by acastillo on 8/24/15.\n */\n/**\n * Non in-place function definitions, compatible with mathjs code *\n */\n\n'use strict';\n\nvar Matrix = require('ml-matrix');\n\nfunction matrix(A,B){\n    return new Matrix(A,B);\n}\n\nfunction ones(rows, cols){\n    return Matrix.ones(rows,cols);\n}\n\nfunction eye(rows, cols){\n    return Matrix.eye(rows, cols);\n}\n\nfunction zeros(rows, cols){\n    return Matrix.zeros(rows, cols);\n}\n\nfunction random(rows, cols){\n    return Matrix.rand(rows,cols);\n}\n\nfunction transpose(A){\n    if(typeof A == 'number')\n        return A;\n    var result = A.clone();\n    return result.transpose();\n}\n\nfunction add(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A+B;\n    if(typeof A == 'number')\n        return this.add(B,A);\n\n    var result = A.clone();\n    return result.add(B);\n\n}\n\nfunction subtract(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A-B;\n    if(typeof A == 'number')\n        return this.subtract(B,A);\n    var result = A.clone();\n    return result.sub(B);\n}\n\nfunction multiply(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A*B;\n    if(typeof A == 'number')\n        return this.multiply(B,A);\n\n    var result = A.clone();\n\n    if(typeof B === 'number')\n        result.mul(B);\n    else\n        result = result.mmul(B);\n\n    if(result.rows==1&&result.columns==1)\n        return result[0][0];\n    else\n        return result;\n\n}\n\nfunction dotMultiply(A, B){\n    var result = A.clone();\n    return result.mul(B);\n}\n\nfunction dotDivide(A, B){\n    var result = A.clone();\n    return result.div(B);\n}\n\nfunction diag(A){\n    var diag = null;\n    var rows = A.rows, cols = A.columns, j, r;\n    //It is an array\n    if(typeof cols === \"undefined\" && (typeof A)=='object'){\n        if(A[0]&&A[0].length){\n            rows = A.length;\n            cols = A[0].length;\n            r = Math.min(rows,cols);\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j][j];\n            }\n        }\n        else{\n            cols = A.length;\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j];\n            }\n        }\n\n    }\n    if(rows == 1){\n        diag = Matrix.zeros(cols, cols);\n        for (j = 0; j < cols; j++) {\n            diag[j][j]=A[0][j];\n        }\n    }\n    else{\n        if(rows>0 && cols > 0){\n            r = Math.min(rows,cols);\n            diag = new Array(r);\n            for (j = 0; j < r; j++) {\n                diag[j] = A[j][j];\n            }\n        }\n    }\n    return diag;\n}\n\nfunction min(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.min(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] < B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction max(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.max(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] > B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction sqrt(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.sqrt(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction abs(A){\n    if(typeof A==='number' )\n        return Math.abs(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.abs(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction exp(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.exp(A[i][j]);\n        }\n    }\n    return result;\n}\n\nfunction dotPow(A, b){\n    if(typeof A==='number' )\n        return Math.pow(A,b);\n    //console.log(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.pow(A[i][j],b);\n        }\n    }\n    return result;\n}\n\nfunction solve(A, B){\n    return A.solve(B);\n}\n\nfunction inv(A){\n    if(typeof A ===\"number\")\n        return 1/A;\n    return A.inverse();\n}\n\nmodule.exports = {\n    transpose:transpose,\n    add:add,\n    subtract:subtract,\n    multiply:multiply,\n    dotMultiply:dotMultiply,\n    dotDivide:dotDivide,\n    diag:diag,\n    min:min,\n    max:max,\n    solve:solve,\n    inv:inv,\n    sqrt:sqrt,\n    exp:exp,\n    dotPow:dotPow,\n    abs:abs,\n    matrix:matrix,\n    ones:ones,\n    zeros:zeros,\n    random:random,\n    eye:eye\n};\n","'use strict';\n\nmodule.exports.gsd = require('./gsd');\n\nmodule.exports.post = {\n  optimizePeaks: require('./post/optimizePeaks'),\n  joinBroadPeaks: require('./post/joinBroadPeaks'),\n  broadenPeaks: require('./post/broadenPeaks'),\n};\n","'use strict';\n\nconst SG = require('ml-savitzky-golay-generalized');\n\nconst defaultOptions = {\n  sgOptions: {\n    windowSize: 9,\n    polynomial: 3,\n  },\n  minMaxRatio: 0.00025,\n  broadRatio: 0.0,\n  maxCriteria: true,\n  smoothY: true,\n  realTopDetection: false,\n  heightFactor: 0,\n  boundaries: false,\n  derivativeThreshold: -1,\n};\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {boolean} [options.boundaries = false] - Return also the inflection points of the peaks\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nfunction gsd(x, yIn, options) {\n  options = Object.assign({}, defaultOptions, options);\n  let sgOptions = options.sgOptions;\n  const y = yIn.slice();\n\n  let maxDx = 0;\n  let minDx = Number.MAX_VALUE;\n  if (!('noiseLevel' in options)) {\n    // We have to know if x is equally spaced\n\n    let tmp;\n    for (let i = 0; i < x.length - 1; ++i) {\n      tmp = Math.abs(x[i + 1] - x[i]);\n      if (tmp < minDx) {\n        minDx = tmp;\n      }\n      if (tmp > maxDx) {\n        maxDx = tmp;\n      }\n    }\n\n    if ((maxDx - minDx) / maxDx < 0.05) {\n      options.noiseLevel = getNoiseLevel(y);\n    } else {\n      options.noiseLevel = 0;\n    }\n  }\n  const yCorrection = { m: 1, b: options.noiseLevel };\n  if (!options.maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then, we can assume it to be equally spaced variable\n  let Y = y;\n  let dY, ddY;\n  if ((maxDx - minDx) / maxDx < 0.05) {\n    if (options.smoothY) {\n      Y = SG(y, x[1] - x[0], {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (options.smoothY) {\n      Y = SG(y, x, {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2,\n    });\n  }\n\n  const X = x;\n  const dx = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < Y.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(Y[i]) > maxY) {\n      maxY = Math.abs(Y[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = new Array(Y.length - 2);\n  let intervalL = new Array(Y.length);\n  let intervalR = new Array(Y.length);\n  let broadMask = new Array(Y.length - 2);\n  let minddYLen = 0;\n  let intervalLLen = 0;\n  let intervalRLen = 0;\n  let broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < Y.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    if (Math.abs(dY[i]) > options.derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: X[i],\n          index: i,\n        };\n        if (dx > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: X[i],\n          index: i,\n        };\n        if (dx < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [X[i], Y[i], i] );\n      broadMask[broadMaskLen++] =\n        Math.abs(ddY[i]) <= options.broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = X[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(Y[minddY[j]]) > options.minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (Y[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j],\n        };\n        if (options.boundaries) {\n          signals[signalsLen - 1].left = intervalL[possible];\n          signals[signalsLen - 1].right = intervalR[possible];\n        }\n        if (options.heightFactor) {\n          let yLeft = Y[intervalL[possible].index];\n          let yRight = Y[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            options.heightFactor *\n            (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (options.realTopDetection) {\n    realTopDetection(signals, X, Y);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = options.noiseLevel;\n  }\n\n  signals.sort(function(a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nfunction getNoiseLevel(y) {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n}\n\nfunction realTopDetection(peakList, x, y) {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n}\n\nmodule.exports = gsd;\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","/**\n * Created by acastillo on 9/6/15.\n */\n'use strict';\n\nlet optimize = require('ml-optimize-lorentzian');\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  let nbPoints = x.length;\n  let sampleX = [];\n  let sampleY = [];\n  let direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  let delta = Math.abs(to - from) / 2;\n  let mid = (from + to) / 2;\n  let stop = false;\n  let index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n    // console.log(sampleX);\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nmodule.exports = function optimizePeaks(peakList, x, y, n, fnType) {\n  let i;\n  let j;\n\n  let lastIndex = [0];\n  let groups = groupPeaks(peakList, n);\n  let result = [];\n  let factor = 1;\n  if (fnType === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  let sampling, error, opts;\n  for (i = 0; i < groups.length; i++) {\n    let peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      // console.log(\"Pending group of overlaped peaks \"+peaks.length);\n      // console.log(\"here1\");\n      // console.log(groups[i].limits);\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex,\n      );\n      // console.log(sampling);\n      if (sampling[0].length > 5) {\n        error = peaks[0].width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        let optPeaks = [];\n        if (fnType === 'gaussian') {\n          optPeaks = optimize.optimizeGaussianSum(sampling, peaks, opts);\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeaks = optimize.optimizeLorentzianSum(sampling, peaks, opts);\n          }\n        }\n        // console.log(optPeak);\n        for (j = 0; j < optPeaks.length; j++) {\n          result.push({\n            x: optPeaks[j][0][0],\n            y: optPeaks[j][1][0],\n            width: optPeaks[j][2][0] * factor,\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - n * peaks.width,\n        peaks.x + n * peaks.width,\n        x,\n        y,\n        lastIndex,\n      );\n      // console.log(\"here2\");\n      // console.log(groups[i].limits);\n      if (sampling[0].length > 5) {\n        error = peaks.width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        // var gauss = Opt.optimizeSingleGaussian([sampling[0],sampling[1]], peaks, opts);\n        let optPeak = [];\n        if (fnType === 'gaussian') {\n          optPeak = optimize.optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            opts,\n          );\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeak = optimize.optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              opts,\n            );\n          }\n        }\n        // console.log(optPeak);\n        result.push({\n          x: optPeak[0][0],\n          y: optPeak[1][0],\n          width: optPeak[2][0] * factor,\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n};\n\nfunction groupPeaks(peakList, nL) {\n  let group = [];\n  let groups = [];\n  let i, j;\n  let limits = [peakList[0].x, nL * peakList[0].width];\n  let upperLimit, lowerLimit;\n  // Merge forward\n  for (i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n      // console.log(limits);\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","'use strict';\n\nmodule.exports = require('./LM');\nmodule.exports.Matrix = require('ml-matrix');\nmodule.exports.Matrix.algebra = require('./algebra');\n","/**\n * Created by acastillo on 8/5/15.\n */\nvar Matrix = require(\"ml-matrix\");\nvar math = require(\"./algebra\");\n\nvar DEBUG = false;\n/** Levenberg Marquardt curve-fitting: minimize sum of weighted squared residuals\n ----------  INPUT  VARIABLES  -----------\n func   = function of n independent variables, 't', and m parameters, 'p',\n returning the simulated model: y_hat = func(t,p,c)\n p      = n-vector of initial guess of parameter values\n t      = m-vectors or matrix of independent variables (used as arg to func)\n y_dat  = m-vectors or matrix of data to be fit by func(t,p)\n weight = weighting vector for least squares fit ( weight >= 0 ) ...\n inverse of the standard measurement errors\n Default:  sqrt(d.o.f. / ( y_dat' * y_dat ))\n dp     = fractional increment of 'p' for numerical derivatives\n dp(j)>0 central differences calculated\n dp(j)<0 one sided 'backwards' differences calculated\n dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n Default:  0.001;\n p_min  = n-vector of lower bounds for parameter values\n p_max  = n-vector of upper bounds for parameter values\n c      = an optional matrix of values passed to func(t,p,c)\n opts   = vector of algorithmic parameters\n parameter    defaults    meaning\n opts(1)  =  prnt            3        >1 intermediate results; >2 plots\n opts(2)  =  MaxIter      10*Npar     maximum number of iterations\n opts(3)  =  epsilon_1       1e-3     convergence tolerance for gradient\n opts(4)  =  epsilon_2       1e-3     convergence tolerance for parameters\n opts(5)  =  epsilon_3       1e-3     convergence tolerance for Chi-square\n opts(6)  =  epsilon_4       1e-2     determines acceptance of a L-M step\n opts(7)  =  lambda_0        1e-2     initial value of L-M paramter\n opts(8)  =  lambda_UP_fac   11       factor for increasing lambda\n opts(9)  =  lambda_DN_fac    9       factor for decreasing lambda\n opts(10) =  Update_Type      1       1: Levenberg-Marquardt lambda update\n 2: Quadratic update\n 3: Nielsen's lambda update equations\n\n ----------  OUTPUT  VARIABLES  -----------\n p       = least-squares optimal estimate of the parameter values\n X2      = Chi squared criteria\n sigma_p = asymptotic standard error of the parameters\n sigma_y = asymptotic standard error of the curve-fit\n corr    = correlation matrix of the parameters\n R_sq    = R-squared cofficient of multiple determination\n cvg_hst = convergence history\n\n Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. 22 Sep 2013\n modified from: http://octave.sourceforge.net/optim/function/leasqr.html\n using references by\n Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n Sam Roweis       http://www.cs.toronto.edu/~roweis/notes/lm.pdf\n Manolis Lourakis http://www.ics.forth.gr/~lourakis/levmar/levmar.pdf\n Hans Nielson     http://www2.imm.dtu.dk/~hbn/publ/TR9905.ps\n Mathworks        optimization toolbox reference manual\n K. Madsen, H.B., Nielsen, and O. Tingleff\n http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/3215/pdf/imm3215.pdf\n */\nvar LM = {\n\n    optimize: function(func,p,t,y_dat,weight,dp,p_min,p_max,c,opts){\n\n        var tensor_parameter = 0;\t\t\t// set to 1 of parameter is a tensor\n\n        var iteration  = 0;\t\t\t// iteration counter\n        //func_calls = 0;\t\t\t// running count of function evaluations\n\n        if((typeof p[0])!=\"object\"){\n            for(var i=0;i< p.length;i++){\n                p[i]=[p[i]];\n            }\n\n        }\n        //p = p(:); y_dat = y_dat(:); \t\t// make column vectors\n        var i,k;\n        var eps = 2^-52;\n        var Npar   = p.length;//length(p); \t\t\t// number of parameters\n        var Npnt   = y_dat.length;//length(y_dat);\t\t// number of data points\n        var p_old  = Matrix.zeros(Npar,1);\t\t// previous set of parameters\n        var y_old  = Matrix.zeros(Npnt,1);\t\t// previous model, y_old = y_hat(t;p_old)\n        var X2     = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var X2_old = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var J =  Matrix.zeros(Npnt,Npar);\n\n\n        if (t.length != y_dat.length) {\n            console.log('lm.m error: the length of t must equal the length of y_dat');\n\n            length_t = t.length;\n            length_y_dat = y_dat.length;\n            var X2 = 0, corr = 0, sigma_p = 0, sigma_y = 0, R_sq = 0, cvg_hist = 0;\n            if (!tensor_parameter) {\n                return;\n            }\n        }\n\n        weight = weight||Math.sqrt((Npnt-Npar+1)/(math.multiply(math.transpose(y_dat),y_dat)));\n        dp = dp || 0.001;\n        p_min   = p_min || math.multiply(Math.abs(p),-100);\n        p_max   = p_max || math.multiply(Math.abs(p),100);\n        c = c || 1;\n        // Algorithmic Paramters\n        //prnt MaxIter  eps1  eps2  epx3  eps4  lam0  lamUP lamDN UpdateType\n        opts = opts ||[  3,10*Npar, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ];\n\n        var prnt          = opts[0];\t// >1 intermediate results; >2 plots\n        var MaxIter       = opts[1];\t// maximum number of iterations\n        var epsilon_1     = opts[2];\t// convergence tolerance for gradient\n        var epsilon_2     = opts[3];\t// convergence tolerance for parameter\n        var epsilon_3     = opts[4];\t// convergence tolerance for Chi-square\n        var epsilon_4     = opts[5];\t// determines acceptance of a L-M step\n        var lambda_0      = opts[6];\t// initial value of damping paramter, lambda\n        var lambda_UP_fac = opts[7];\t// factor for increasing lambda\n        var lambda_DN_fac = opts[8];\t// factor for decreasing lambda\n        var Update_Type   = opts[9];\t// 1: Levenberg-Marquardt lambda update\n        // 2: Quadratic update\n        // 3: Nielsen's lambda update equations\n\n        if ( tensor_parameter && prnt == 3 ) prnt = 2;\n\n\n        if(!dp.length || dp.length == 1){\n            var dp_array = new Array(Npar);\n            for(var i=0;i<Npar;i++)\n                dp_array[i]=[dp];\n            dp=dp_array;\n        }\n\n        // indices of the parameters to be fit\n        var idx   = [];\n        for(i=0;i<dp.length;i++){\n            if(dp[i][0]!=0){\n                idx.push(i);\n            }\n        }\n\n        var Nfit = idx.length;\t\t\t// number of parameters to fit\n        var stop = false;\t\t\t\t// termination flag\n\n        var weight_sq = null;\n        //console.log(weight);\n        if ( !weight.length || weight.length < Npnt )\t{\n            // squared weighting vector\n            //weight_sq = ( weight(1)*ones(Npnt,1) ).^2;\n            //console.log(\"weight[0] \"+typeof weight[0]);\n            var tmp = math.multiply(Matrix.ones(Npnt,1),weight[0]);\n            weight_sq = math.dotMultiply(tmp,tmp);\n        }\n        else{\n            //weight_sq = (weight(:)).^2;\n            weight_sq = math.dotMultiply(weight,weight);\n        }\n\n\n        // initialize Jacobian with finite difference calculation\n        //console.log(\"J \"+weight_sq);\n        var result = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        var JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n        //[JtWJ,JtWdy,X2,y_hat,J] = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        //console.log(JtWJ);\n\n        if ( Math.max(Math.abs(JtWdy)) < epsilon_1 ){\n            console.log(' *** Your Initial Guess is Extremely Close to Optimal ***')\n            console.log(' *** epsilon_1 = ', epsilon_1);\n            stop = true;\n        }\n\n\n        switch(Update_Type){\n            case 1: // Marquardt: init'l lambda\n                lambda  = lambda_0;\n                break;\n            default:    // Quadratic and Nielsen\n                lambda  = lambda_0 * Math.max(math.diag(JtWJ));\n                nu=2;\n        }\n        //console.log(X2);\n        X2_old = X2; // previous value of X2\n        //console.log(MaxIter+\" \"+Npar);\n        //var cvg_hst = Matrix.ones(MaxIter,Npar+3);\t\t// initialize convergence history\n        var h = null;\n        while ( !stop && iteration <= MaxIter ) {\t\t// --- Main Loop\n            iteration = iteration + 1;\n            // incremental change in parameters\n            switch(Update_Type){\n                case 1:\t\t\t\t\t// Marquardt\n                    //h = ( JtWJ + lambda * math.diag(math.diag(JtWJ)) ) \\ JtWdy;\n                    //h = math.multiply(math.inv(JtWdy),math.add(JtWJ,math.multiply(lambda,math.diag(math.diag(Npar)))));\n                    h = math.solve(math.add(JtWJ,math.multiply(math.diag(math.diag(JtWJ)),lambda)),JtWdy);\n                    break;\n                default:\t\t\t\t\t// Quadratic and Nielsen\n                    //h = ( JtWJ + lambda * math.eye(Npar) ) \\ JtWdy;\n\n                    h = math.solve(math.add(JtWJ,math.multiply( Matrix.eye(Npar),lambda)),JtWdy);\n            }\n\n            /*for(var k=0;k< h.length;k++){\n             h[k]=[h[k]];\n             }*/\n            //console.log(\"h \"+h);\n            //h=math.matrix(h);\n            //  big = max(abs(h./p)) > 2;\n            //this is a big step\n            // --- Are parameters [p+h] much better than [p] ?\n            var hidx = new Array(idx.length);\n            for(k=0;k<idx.length;k++){\n                hidx[k]=h[idx[k]];\n            }\n            var p_try = math.add(p, hidx);// update the [idx] elements\n\n            for(k=0;k<p_try.length;k++){\n                p_try[k][0]=Math.min(Math.max(p_min[k][0],p_try[k][0]),p_max[k][0]);\n            }\n            // p_try = Math.min(Math.max(p_min,p_try),p_max);           // apply constraints\n\n            var delta_y = math.subtract(y_dat, func(t,p_try,c));       // residual error using p_try\n            //func_calls = func_calls + 1;\n            //X2_try = delta_y' * ( delta_y .* weight_sq );  // Chi-squared error criteria\n\n            var X2_try = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n\n            if ( Update_Type == 2 ){  \t\t\t  // Quadratic\n                //    One step of quadratic line update in the h direction for minimum X2\n                //var alpha =  JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n                var JtWdy_th = math.multiply(math.transpose(JtWdy),h);\n                var alpha =  math.multiply(JtWdy_th,math.inv(math.add(math.multiply(math.subtract(X2_try - X2),1/2)),math.multiply(JtWdy_th,2)));//JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n\n                h = math.multiply(alpha, h);\n                for(var k=0;k<idx.length;k++){\n                    hidx[k]=h[idx[k]];\n                }\n\n                p_try = math.add(p ,hidx);                     // update only [idx] elements\n                p_try = math.min(math.max(p_min,p_try),p_max);          // apply constraints\n\n                delta_y = math.subtract(y_dat, func(t,p_try,c));      // residual error using p_try\n                // func_calls = func_calls + 1;\n                //X2_try = delta_y' * ( delta_y .* weight_sq ); // Chi-squared error criteria\n                X2_try = math.multiply(math.transpose(delta_y), mat.dotMultiply(delta_y, weight_sq));\n            }\n\n            //rho = (X2 - X2_try) / ( 2*h' * (lambda * h + JtWdy) ); // Nielsen\n            var rho = (X2-X2_try)/math.multiply(math.multiply(math.transpose(h),2),math.add(math.multiply(lambda, h),JtWdy));\n            //console.log(\"rho \"+rho);\n            if ( rho > epsilon_4 ) {\t\t// it IS significantly better\n                //console.log(\"Here\");\n                dX2 = X2 - X2_old;\n                X2_old = X2;\n                p_old = p;\n                y_old = y_hat;\n                p = p_try;\t\t\t// accept p_try\n\n                result = this.lm_matx(func, t, p_old, y_old, dX2, J, p, y_dat, weight_sq, dp, c);\n                JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                // decrease lambda ==> Gauss-Newton method\n\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.max(lambda / lambda_DN_fac, 1.e-7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = Math.max(lambda / (1 + alpha), 1.e-7);\n                        break;\n                    case 3:\t\t\t\t\t\t\t// Nielsen\n                        lambda = math.multiply(Math.max(1 / 3, 1 - (2 * rho - 1) ^ 3),lambda);\n                        nu = 2;\n                        break;\n                }\n            }\n            else {\t\t\t\t\t// it IS NOT better\n                X2 = X2_old;\t\t\t// do not accept p_try\n                if (iteration%(2 * Npar)==0) {\t// rank-1 update of Jacobian\n                    result = this.lm_matx(func, t, p_old, y_old, -1, J, p, y_dat, weight_sq, dp, c);\n                    JtWJ = result.JtWJ,JtWdy=result.JtWdy,dX2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                }\n\n                // increase lambda  ==> gradient descent method\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.min(lambda * lambda_UP_fac, 1.e7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = lambda + Math.abs((X2_try - X2) / 2 / alpha);\n                        break;\n                    case 3:\t\t\t\t\t\t// Nielsen\n                        lambda = lambda * nu;\n                        nu = 2 * nu;\n                        break;\n                }\n            }\n        }// --- End of Main Loop\n\n        // --- convergence achieved, find covariance and confidence intervals\n\n        // equal weights for paramter error analysis\n        weight_sq = math.multiply(math.multiply(math.transpose(delta_y),delta_y), Matrix.ones(Npnt,1));\n\n        weight_sq.apply(function(i,j){\n            weight_sq[i][j] = (Npnt-Nfit+1)/weight_sq[i][j];\n        });\n        //console.log(weight_sq);\n        result = this.lm_matx(func,t,p_old,y_old,-1,J,p,y_dat,weight_sq,dp,c);\n        JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n\n        /*if nargout > 2\t\t\t\t// standard error of parameters\n         covar = inv(JtWJ);\n         sigma_p = sqrt(diag(covar));\n         end\n\n         if nargout > 3\t\t\t\t// standard error of the fit\n         //  sigma_y = sqrt(diag(J * covar * J'));\t// slower version of below\n         sigma_y = zeros(Npnt,1);\n         for i=1:Npnt\n         sigma_y(i) = J(i,:) * covar * J(i,:)';\n         end\n         sigma_y = sqrt(sigma_y);\n         end\n\n         if nargout > 4\t\t\t\t// parameter correlation matrix\n         corr = covar ./ [sigma_p*sigma_p'];\n         end\n\n         if nargout > 5\t\t\t\t// coefficient of multiple determination\n         R_sq = corrcoef([y_dat y_hat]);\n         R_sq = R_sq(1,2).^2;\n         end\n\n         if nargout > 6\t\t\t\t// convergence history\n         cvg_hst = cvg_hst(1:iteration,:);\n         end*/\n\n        // endfunction  # ---------------------------------------------------------- LM\n\n        return { p:p, X2:X2};\n    },\n\n    lm_FD_J:function(func,t,p,y,dp,c) {\n        // J = lm_FD_J(func,t,p,y,{dp},{c})\n        //\n        // partial derivatives (Jacobian) dy/dp for use with lm.m\n        // computed via Finite Differences\n        // Requires n or 2n function evaluations, n = number of nonzero values of dp\n        // -------- INPUT VARIABLES ---------\n        // func = function of independent variables, 't', and parameters, 'p',\n        //        returning the simulated model: y_hat = func(t,p,c)\n        // t  = m-vector of independent variables (used as arg to func)\n        // p  = n-vector of current parameter values\n        // y  = func(t,p,c) n-vector initialised by user before each call to lm_FD_J\n        // dp = fractional increment of p for numerical derivatives\n        //      dp(j)>0 central differences calculated\n        //      dp(j)<0 one sided differences calculated\n        //      dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //      Default:  0.001;\n        // c  = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // J  = Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n        var m = y.length;\t\t\t// number of data points\n        var n = p.length;\t\t\t// number of parameters\n\n        dp = dp || math.multiply( Matrix.ones(n, 1), 0.001);\n\n        var ps = p.clone();//JSON.parse(JSON.stringify(p));\n        //var ps = $.extend(true, [], p);\n        var J = new Matrix(m,n), del =new Array(n);         // initialize Jacobian to Zero\n\n        for (var j = 0;j < n; j++) {\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n            del[j] = dp[j]*(1+Math.abs(p[j][0]));  // parameter perturbation\n            p[j] = [ps[j][0]+del[j]];\t      // perturb parameter p(j)\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n\n            if (del[j] != 0){\n                y1 = func(t, p, c);\n                //func_calls = func_calls + 1;\n                if (dp[j][0] < 0) {\t\t// backwards difference\n                    //J(:,j) = math.dotDivide(math.subtract(y1, y),del[j]);//. / del[j];\n                    //console.log(del[j]);\n                    //console.log(y);\n                    var column = math.dotDivide(math.subtract(y1, y),del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n                    //console.log(column);\n                }\n                else{\n                    p[j][0] = ps[j][0] - del[j];\n                    //J(:,j) = (y1 - feval(func, t, p, c)). / (2. * del[j]);\n                    var column = math.dotDivide(math.subtract(y1,func(t,p,c)),2*del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n\n                }\t\t\t// central difference, additional func call\n            }\n\n            p[j] = ps[j];\t\t// restore p(j)\n\n        }\n        //console.log(\"lm_FD_J: \"+ JSON.stringify(J));\n        return J;\n\n    },\n\n    // endfunction # -------------------------------------------------- LM_FD_J\n    lm_Broyden_J: function(p_old,y_old,J,p,y){\n        // J = lm_Broyden_J(p_old,y_old,J,p,y)\n        // carry out a rank-1 update to the Jacobian matrix using Broyden's equation\n        //---------- INPUT VARIABLES -------\n        // p_old = previous set of parameters\n        // y_old = model evaluation at previous set of parameters, y_hat(t;p_old)\n        // J  = current version of the Jacobian matrix\n        // p     = current  set of parameters\n        // y     = model evaluation at current  set of parameters, y_hat(t;p)\n        //---------- OUTPUT VARIABLES -------\n        // J = rank-1 update to Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n        //console.log(p+\" X \"+ p_old)\n        var h  = math.subtract(p, p_old);\n\n        //console.log(\"hhh \"+h);\n        var h_t = math.transpose(h);\n        h_t.div(math.multiply(h_t,h));\n\n        //console.log(h_t);\n        //J = J + ( y - y_old - J*h )*h' / (h'*h);\t// Broyden rank-1 update eq'n\n        J = math.add(J, math.multiply(math.subtract(y, math.add(y_old,math.multiply(J,h))),h_t));\n        return J;\n        // endfunction # ---------------------------------------------- LM_Broyden_J\n    },\n\n    lm_matx : function (func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,dp,c,iteration){\n        // [JtWJ,JtWdy,Chi_sq,y_hat,J] = this.lm_matx(func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,{da},{c})\n        //\n        // Evaluate the linearized fitting matrix, JtWJ, and vector JtWdy,\n        // and calculate the Chi-squared error function, Chi_sq\n        // Used by Levenberg-Marquard algorithm, lm.m\n        // -------- INPUT VARIABLES ---------\n        // func   = function ofpn independent variables, p, and m parameters, p,\n        //         returning the simulated model: y_hat = func(t,p,c)\n        // t      = m-vectors or matrix of independent variables (used as arg to func)\n        // p_old  = n-vector of previous parameter values\n        // y_old  = m-vector of previous model ... y_old = y_hat(t;p_old);\n        // dX2    = previous change in Chi-squared criteria\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n        // p      = n-vector of current  parameter values\n        // y_dat  = n-vector of data to be fit by func(t,p,c)\n        // weight_sq = square of the weighting vector for least squares fit ...\n        //\t    inverse of the standard measurement errors\n        // dp     = fractional increment of 'p' for numerical derivatives\n        //          dp(j)>0 central differences calculated\n        //          dp(j)<0 one sided differences calculated\n        //          dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //          Default:  0.001;\n        // c      = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // JtWJ\t = linearized Hessian matrix (inverse of covariance matrix)\n        // JtWdy   = linearized fitting vector\n        // Chi_sq = Chi-squared criteria: weighted sum of the squared residuals WSSR\n        // y_hat  = model evaluated with parameters 'p'\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n\n        var Npnt = y_dat.length;\t\t// number of data points\n        var Npar = p.length;\t\t// number of parameters\n\n        dp = dp || 0.001;\n\n\n        //var JtWJ = new Matrix.zeros(Npar);\n        //var JtWdy  = new Matrix.zeros(Npar,1);\n\n        var y_hat = func(t,p,c);\t// evaluate model using parameters 'p'\n        //func_calls = func_calls + 1;\n        //console.log(J);\n        if ( (iteration%(2*Npar))==0 || dX2 > 0 ) {\n            //console.log(\"Par\");\n            J = this.lm_FD_J(func, t, p, y_hat, dp, c);\t\t// finite difference\n        }\n        else{\n            //console.log(\"ImPar\");\n            J = this.lm_Broyden_J(p_old, y_old, J, p, y_hat); // rank-1 update\n        }\n        //console.log(y_dat);\n        //console.log(y_hat);\n        var delta_y = math.subtract(y_dat, y_hat);\t// residual error between model and data\n        //console.log(delta_y[0][0]);\n        //console.log(delta_y.rows+\" \"+delta_y.columns+\" \"+JSON.stringify(weight_sq));\n        //var Chi_sq = delta_y' * ( delta_y .* weight_sq ); \t// Chi-squared error criteria\n        var Chi_sq = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n        //JtWJ  = J' * ( J .* ( weight_sq * ones(1,Npar) ) );\n        var Jt = math.transpose(J);\n\n        //console.log(weight_sq);\n\n        var JtWJ = math.multiply(Jt, math.dotMultiply(J,math.multiply(weight_sq, Matrix.ones(1,Npar))));\n\n        //JtWdy = J' * ( weight_sq .* delta_y );\n        var JtWdy = math.multiply(Jt, math.dotMultiply(weight_sq,delta_y));\n\n\n        return {JtWJ:JtWJ,JtWdy:JtWdy,Chi_sq:Chi_sq,y_hat:y_hat,J:J};\n        // endfunction  # ------------------------------------------------------ LM_MATX\n    }\n\n\n\n};\n\nmodule.exports = LM;","'use strict';\n\nif (!Symbol.species) {\n    Symbol.species = Symbol.for('@@species');\n}\n","module.exports = exports = require('./ArrayUtils');\n\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for(var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for(var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for(i = 0; i < array.length; i += dimensions) {\n        for(var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for(var i = 0; i < coordMatrix[0].length; ++i) {\n        for(var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for(var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for(var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for(var i = 0; i < points.length; ++i) {\n        for(var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if(firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options){\n    var y;\n    if(options.inPlace){\n        y = input;\n    }\n    else{\n        y = new Array(input.length);\n    }\n    const max = options.max;\n    const min = options.min;\n    if(typeof max === \"number\"){\n        if(typeof min === \"number\"){\n            var minMax = Stat.minMax(input);\n            var factor = (max - min)/(minMax.max-minMax.min);\n            for(var i=0;i< y.length;i++){\n                y[i]=(input[i]-minMax.min)*factor+min;\n            }\n        }\n        else{\n            var currentMin = Stat.max(input);\n            var factor = max/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    else{\n        if(typeof min === \"number\"){\n            var currentMin = Stat.min(input);\n            var factor = min/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale:scale\n};\n\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options) {\n    if (x.length>1 && x[0]>x[1]) {\n        x=x.slice().reverse();\n        y=y.slice().reverse();\n    }\n\n    var xLength = x.length;\n    if(xLength !== y.length)\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n\n    if (options === undefined) options = {};\n\n    var from = options.from === undefined ? x[0] : options.from\n    if (isNaN(from) || !isFinite(from)) {\n        throw new RangeError(\"'From' value must be a number\");\n    }\n    var to = options.to === undefined ? x[x.length - 1] : options.to;\n    if (isNaN(to) || !isFinite(to)) {\n        throw new RangeError(\"'To' value must be a number\");\n    }\n\n    var reverse = from > to;\n    if(reverse) {\n        var temp = from;\n        from = to;\n        to = temp;\n    }\n\n    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;\n    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {\n        throw new RangeError(\"'Number of points' value must be a number\");\n    }\n    if(numberOfPoints < 1)\n        throw new RangeError(\"the number of point must be higher than 1\");\n\n    var algorithm = options.variant === \"slot\" ? \"slot\" : \"smooth\"; // default value: smooth\n\n    var output = algorithm === \"slot\" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while(true) {\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j] = (sumAtMax - sumAtMin) / step;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        if(previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n        // updating parameters\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope*previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while(true) {\n        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if(backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if(previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)\n            currentPoints--;\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n *\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixTransposeView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.columns, matrix.rows);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(columnIndex, rowIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(columnIndex, rowIndex);\n    }\n}\n\nmodule.exports = MatrixTransposeView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixRowView extends BaseView {\n    constructor(matrix, row) {\n        super(matrix, 1, matrix.columns);\n        this.row = row;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.row, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.row, columnIndex);\n    }\n}\n\nmodule.exports = MatrixRowView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSubView extends BaseView {\n    constructor(matrix, startRow, endRow, startColumn, endColumn) {\n        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);\n        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n        this.startRow = startRow;\n        this.startColumn = startColumn;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n}\n\nmodule.exports = MatrixSubView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSelectionView extends BaseView {\n    constructor(matrix, rowIndices, columnIndices) {\n        var indices = util.checkIndices(matrix, rowIndices, columnIndices);\n        super(matrix, indices.row.length, indices.column.length);\n        this.rowIndices = indices.row;\n        this.columnIndices = indices.column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n}\n\nmodule.exports = MatrixSelectionView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixColumnView extends BaseView {\n    constructor(matrix, column) {\n        super(matrix, matrix.rows, 1);\n        this.column = column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.column, value);\n        return this;\n    }\n\n    get(rowIndex) {\n        return this.matrix.get(rowIndex, this.column);\n    }\n}\n\nmodule.exports = MatrixColumnView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipRowView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n    }\n}\n\nmodule.exports = MatrixFlipRowView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipColumnView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n    }\n}\n\nmodule.exports = MatrixFlipColumnView;\n","'use strict';\n\nvar Matrix = require('./matrix').Matrix;\n\nvar SingularValueDecomposition = require('./dc/svd');\nvar EigenvalueDecomposition = require('./dc/evd');\nvar LuDecomposition = require('./dc/lu');\nvar QrDecomposition = require('./dc/qr');\nvar CholeskyDecomposition = require('./dc/cholesky');\n\nfunction inverse(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.inverse = Matrix.inv = inverse;\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.prototype.inverse = Matrix.prototype.inv = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    leftHandSide = Matrix.checkMatrix(leftHandSide);\n    rightHandSide = Matrix.checkMatrix(rightHandSide);\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.solve = solve;\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n","'use strict';\n\nconst Matrix = require('../matrix').Matrix;\nconst util = require('./util');\nconst hypotenuse = util.hypotenuse;\nconst getFilled2DArray = util.getFilled2DArray;\n\nconst defaultOptions = {\n    assumeSymmetric: false\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (!(this instanceof EigenvalueDecomposition)) {\n        return new EigenvalueDecomposition(matrix, options);\n    }\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = getFilled2DArray(n, n, 0),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    var isSymmetric = false;\n    if (options.assumeSymmetric) {\n        isSymmetric = true;\n    } else {\n        isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value.get(i, j);\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    } else {\n        var H = getFilled2DArray(n, n, 0),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value.get(i, j);\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecomposition.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        if (!Matrix.isMatrix(this.V)) {\n            this.V = new Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            } else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    } else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nmodule.exports = EigenvalueDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\nvar hypotenuse = require('./util').hypotenuse;\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    if (!(this instanceof QrDecomposition)) {\n        return new QrDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecomposition.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m) {\n            throw new Error('Matrix row dimensions must agree');\n        }\n        if (!this.isFullRank()) {\n            throw new Error('Matrix is rank deficient');\n        }\n\n        var count = value.columns;\n        var X = value.clone();\n        var n = qr.columns;\n        var i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularMatrix() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalMatrix() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = QrDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    if (!(this instanceof CholeskyDecomposition)) {\n        return new CholeskyDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric()) {\n        throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n}\n\nCholeskyDecomposition.prototype = {\n    get lowerTriangularMatrix() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nmodule.exports = CholeskyDecomposition;\n","'use strict';\n\nlet Opt = require('ml-optimize-lorentzian');\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nmodule.exports = function joinBroadPeaks(peakList, options = {}) {\n  let width = options.width;\n  let broadLines = [];\n  // Optimize the possible broad lines\n  let max = 0;\n\n  let maxI = 0;\n\n  let count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feke peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  let candidates = [[broadLines[0].x, broadLines[0].y]];\n  let indexes = [0];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(i);\n      count++;\n    } else {\n      if (count > 2) {\n        let fitted = Opt.optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0],\n          ),\n        });\n        peakList.push({\n          x: fitted[0][0],\n          y: fitted[1][0],\n          width: fitted[2][0],\n          soft: false,\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function(a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n};\n","'use strict';\n\n/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nmodule.exports = function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    peak.from = peak.x - (peak.width / 2) * factor;\n    peak.to = peak.x + (peak.width / 2) * factor;\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n};\n"],"sourceRoot":""}