{"version":3,"file":"ml-gsd.js","sources":["../node_modules/ml-savitzky-golay-generalized/src/index.js","../src/gsd.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-levenberg-marquardt/src/errorCalculation.js","../node_modules/ml-array-rescale/node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-levenberg-marquardt/src/step.js","../node_modules/ml-levenberg-marquardt/src/index.js","../node_modules/ml-optimize-lorentzian/src/sumOfGaussians.js","../node_modules/ml-optimize-lorentzian/src/optimizeGaussianSum.js","../node_modules/ml-optimize-lorentzian/src/singleGaussian.js","../node_modules/ml-optimize-lorentzian/src/optimizeSingleGaussian.js","../node_modules/ml-optimize-lorentzian/src/sumOfLorentzians.js","../node_modules/ml-optimize-lorentzian/src/optimizeLorentzianSum.js","../node_modules/ml-optimize-lorentzian/src/singleLorentzian.js","../node_modules/ml-optimize-lorentzian/src/optimizeSingleLorentzian.js","../src/post/optimizePeaks.js","../src/post/joinBroadPeaks.js","../src/post/broadenPeaks.js"],"sourcesContent":["export default function SavitzkyGolay(data, h, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > data.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${data.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = data.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(h)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(h, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * data[l];\n      d2 += wg2[l] * data[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(h, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(h, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * data[l + i - windowSize];\n    if (!constantH) hs = getHs(h, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(x, yIn, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n\n  const yCorrection = { m: 1, b: noiseLevel };\n\n  if (!maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = new Array(yData.length - 2);\n  let intervalL = new Array(yData.length);\n  let intervalR = new Array(yData.length);\n  let broadMask = new Array(yData.length - 2);\n  let minddYLen = 0;\n  let intervalLLen = 0;\n  let intervalRLen = 0;\n  let broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    // console.log('pasa', y[i], dY[i], ddY[i]);\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [xData[i], yData[i], i] );\n      broadMask[broadMaskLen++] = Math.abs(ddY[i]) <= broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (yData[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j],\n        };\n\n        signals[signalsLen - 1].left = intervalL[possible];\n        signals[signalsLen - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            heightFactor * (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction,\n) {\n  let error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (let i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction,\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  let ans = new Array(n);\n\n  for (let param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    let auxParams = params.slice();\n    auxParams[param] += gradientDifference;\n    let funcParam = paramFunction(auxParams);\n\n    for (let point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  let ans = new Array(m);\n\n  for (let point = 0; point < m; point++) {\n    ans[point] = [data.y[point] - evaluatedData[point]];\n  }\n\n  return new Matrix(ans);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction,\n) {\n  let value = damping * gradientDifference * gradientDifference;\n  let identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n\n  let evaluatedData = new Float64Array(data.x.length);\n  for (let i = 0; i < data.x.length; i++) {\n    evaluatedData[i] = func(data.x[i]);\n  }\n\n  let gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction,\n  );\n  let matrixFunc = matrixFunction(data, evaluatedData);\n  let inverseMatrix = inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transpose())),\n  );\n\n  params = new Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transpose(),\n  );\n\n  return params.to1DArray();\n}\n","import isArray from 'is-any-array';\n\nimport errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {},\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    minValues,\n    maxValues,\n    initialValues,\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !isArray(data.x) ||\n    data.x.length < 2 ||\n    !isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points',\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  let parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  let error = errorCalculation(data, parameters, parameterizedFunction);\n\n  let converged = error <= errorTolerance;\n\n  let iteration;\n  for (iteration = 0; iteration < maxIterations && !converged; iteration++) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction,\n    );\n\n    for (let k = 0; k < parLen; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k]),\n        maxValues[k],\n      );\n    }\n\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    if (isNaN(error)) break;\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration,\n  };\n}\n","/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nexport function sumOfGaussians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let factor;\n    let rows = t.length;\n    let result = rows === undefined ? 0 : new Float64Array(rows).fill(0);\n    for (let i = 0; i < nL; i++) {\n      factor = Math.pow(p[i + nL * 2], 2) * 2;\n      if (rows === undefined) {\n        result += p[i + nL] * Math.exp(-Math.pow(t - p[i], 2) / factor);\n      } else {\n        for (let j = 0; j < rows; j++) {\n          result[j] += p[i + nL] * Math.exp(-Math.pow(t[j] - p[i], 2) / factor);\n        }\n      }\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { sumOfGaussians } from './sumOfGaussians';\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nexport function optimizeGaussianSum(xy, group, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let nL = group.length;\n  let pInit = new Float64Array(nL * 3);\n  let pMin = new Float64Array(nL * 3);\n  let pMax = new Float64Array(nL * 3);\n  let dt = Math.abs(t[0] - t[1]);\n\n  for (let i = 0; i < nL; i++) {\n    pInit[i] = group[i].x;\n    pInit[i + nL] = group[i].y / maxY;\n    pInit[i + 2 * nL] = group[i].width;\n\n    pMin[i] = group[i].x - dt;\n    pMin[i + nL] = 0;\n    pMin[i + 2 * nL] = group[i].width / 4;\n\n    pMax[i] = group[i].x + dt;\n    pMax[i + nL] = (group[i].y * 1.2) / maxY;\n    pMax[i + 2 * nL] = group[i].width * 4;\n  }\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n  let result = new Array(nL);\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n\n  let pFit = LM(data, sumOfGaussians, opts);\n  for (let i = 0; i < nL; i++) {\n    result[i] = {\n      parameters: [\n        pFit.parameterValues[i],\n        pFit.parameterValues[i + nL] * maxY,\n        pFit.parameterValues[i + nL * 2],\n      ],\n      error: pFit.parameterError,\n    };\n  }\n  return result;\n}\n","/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\n\nexport function singleGaussian(p) {\n  return function (t) {\n    let factor2 = (p[2] * p[2]) / 2;\n    let rows = t.length;\n    if (!rows) return p[1] * Math.exp((-(t - p[0]) * (t - p[0])) / factor2);\n    let result = new Float64Array(t.length);\n    for (let i = 0; i < t.length; i++) {\n      result[i] = p[1] * Math.exp((-(t[i] - p[0]) * (t[i] - p[0])) / factor2);\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { singleGaussian } from './singleGaussian';\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nexport function optimizeSingleGaussian(xy, peak, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let dt = Math.abs(t[0] - t[1]);\n  let pInit = new Float64Array([peak.x, 1, peak.width]);\n  let pMin = new Float64Array([peak.x - dt, 0, peak.width / 4]);\n  let pMax = new Float64Array([peak.x + dt, 1.25, peak.width * 4]);\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n  let pFit = LM(data, singleGaussian, opts);\n  return {\n    parameters: [\n      pFit.parameterValues[0],\n      pFit.parameterValues[1] * maxY,\n      pFit.parameterValues[2],\n    ],\n    error: pFit.parameterError,\n  };\n}\n","/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @returns {*}\n */\n\nexport function sumOfLorentzians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let factor;\n    let p2;\n    let rows = t.length;\n    let result = rows === undefined ? 0 : new Float64Array(rows).fill(0);\n    for (let i = 0; i < nL; i++) {\n      p2 = Math.pow(p[i + nL * 2] / 2, 2);\n      factor = p[i + nL] * p2;\n      if (rows === undefined) {\n        result += factor / (Math.pow(t - p[i], 2) + p2);\n      } else {\n        for (let j = 0; j < rows; j++) {\n          result[j] += factor / (Math.pow(t[j] - p[i], 2) + p2);\n        }\n      }\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { sumOfLorentzians } from './sumOfLorentzians';\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nexport function optimizeLorentzianSum(xy, group, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n\n  let nL = group.length;\n  let pInit = new Float64Array(nL * 3);\n  let pMin = new Float64Array(nL * 3);\n  let pMax = new Float64Array(nL * 3);\n  let dt = Math.abs(t[0] - t[1]);\n\n  for (let i = 0; i < nL; i++) {\n    pInit[i] = group[i].x;\n    pInit[i + nL] = 1;\n    pInit[i + 2 * nL] = group[i].width;\n\n    pMin[i] = group[i].x - dt;\n    pMin[i + nL] = 0;\n    pMin[i + 2 * nL] = group[i].width / 4;\n\n    pMax[i] = group[i].x + dt;\n    pMax[i + nL] = 1.5;\n    pMax[i + 2 * nL] = group[i].width * 4;\n  }\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let result = new Array(nL);\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n\n  let pFit = LM(data, sumOfLorentzians, opts);\n  for (let i = 0; i < nL; i++) {\n    result[i] = {\n      parameters: [\n        pFit.parameterValues[i],\n        pFit.parameterValues[i + nL] * maxY,\n        pFit.parameterValues[i + nL * 2],\n      ],\n      error: pFit.parameterError,\n    };\n  }\n  return result;\n}\n","/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\n\nexport function singleLorentzian(p) {\n  return function (t) {\n    let factor = p[1] * Math.pow(p[2] / 2, 2);\n    let rows = t.length;\n    if (!rows) return factor / (Math.pow(t - p[0], 2) + Math.pow(p[2] / 2, 2));\n    let result = new Float64Array(rows);\n    for (let i = 0; i < rows; i++) {\n      result[i] = factor / (Math.pow(t[i] - p[0], 2) + Math.pow(p[2] / 2, 2));\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { singleLorentzian } from './singleLorentzian';\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nexport function optimizeSingleLorentzian(xy, peak, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let dt = Math.abs(t[0] - t[1]);\n  let pInit = new Float64Array([peak.x, 1, peak.width]);\n  let pMin = new Float64Array([peak.x - dt, 0.75, peak.width / 4]);\n  let pMax = new Float64Array([peak.x + dt, 1.25, peak.width * 4]);\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n  opts = Object.assign({}, lmOptions, opts);\n  let pFit = LM(data, singleLorentzian, opts);\n  return {\n    parameters: [\n      pFit.parameterValues[0],\n      pFit.parameterValues[1] * maxY,\n      pFit.parameterValues[2],\n    ],\n    error: pFit.parameterError,\n  };\n}\n","import {\n  optimizeGaussianSum,\n  optimizeLorentzianSum,\n  optimizeSingleGaussian,\n  optimizeSingleLorentzian,\n} from 'ml-optimize-lorentzian';\n\nexport function optimizePeaks(peakList, x, y, options = {}) {\n  const {\n    functionName = 'gaussian',\n    factorWidth = 4,\n    optimizationOptions = {\n      damping: 1.5,\n      maxIterations: 100,\n      errorTolerance: 10e-5,\n    },\n  } = options;\n\n  let lastIndex = [0];\n  let groups = groupPeaks(peakList, factorWidth);\n  let result = [];\n  let factor = 1;\n  if (functionName === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  let sampling;\n  for (let i = 0; i < groups.length; i++) {\n    let peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex,\n      );\n      if (sampling[0].length > 5) {\n        let optPeaks = [];\n        if (functionName === 'gaussian') {\n          optPeaks = optimizeGaussianSum(sampling, peaks, optimizationOptions);\n        } else {\n          if (functionName === 'lorentzian') {\n            optPeaks = optimizeLorentzianSum(\n              sampling,\n              peaks,\n              optimizationOptions,\n            );\n          }\n        }\n\n        for (let j = 0; j < optPeaks.length; j++) {\n          let { parameters } = optPeaks[j];\n          result.push({\n            x: parameters[0],\n            y: parameters[1],\n            width: parameters[2] * factor,\n            index: peaks[j].index,\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - factorWidth * peaks.width,\n        peaks.x + factorWidth * peaks.width,\n        x,\n        y,\n        lastIndex,\n      );\n\n      if (sampling[0].length > 5) {\n        let fitResult = [];\n        if (functionName === 'gaussian') {\n          fitResult = optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            optimizationOptions,\n          );\n        } else {\n          if (functionName === 'lorentzian') {\n            fitResult = optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              optimizationOptions,\n            );\n          }\n        }\n\n        let { parameters } = fitResult;\n        result.push({\n          x: parameters[0],\n          y: parameters[1],\n          width: parameters[2] * factor,\n          index: peaks.index,\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n}\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  let nbPoints = x.length;\n  let sampleX = [];\n  let sampleY = [];\n  let direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  let delta = Math.abs(to - from) / 2;\n  let mid = (from + to) / 2;\n  let stop = false;\n  let index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nfunction groupPeaks(peakList, nL) {\n  let group = [];\n  let groups = [];\n  let limits = [peakList[0].x, nL * peakList[0].width];\n  let upperLimit, lowerLimit;\n  // Merge forward\n  for (let i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (let i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (let j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","import { optimizeSingleLorentzian } from 'ml-optimize-lorentzian';\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nexport function joinBroadPeaks(peakList, options = {}) {\n  let width = options.width;\n  let broadLines = [];\n  // Optimize the possible broad lines\n  let max = 0;\n\n  let maxI = 0;\n\n  let count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feke peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  let candidates = [[broadLines[0].x, broadLines[0].y]];\n  let indexes = [broadLines[0].index];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(broadLines[i].index);\n      count++;\n    } else {\n      if (count > 2) {\n        let fitted = optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0],\n          ),\n        });\n        let { parameters } = fitted;\n        peakList.push({\n          x: parameters[0],\n          y: parameters[1],\n          width: parameters[2],\n          index: Math.floor(\n            indexes.reduce((a, b) => a + b, 0) / indexes.length,\n          ),\n          soft: false,\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n}\n","/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nexport function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    if (!peak.right || !peak.left) {\n      peak.from = peak.x - (peak.width / 2) * factor;\n      peak.to = peak.x + (peak.width / 2) * factor;\n    } else {\n      peak.from = peak.x - (peak.x - peak.left.x) * factor;\n      peak.to = peak.x + (peak.right.x - peak.x) * factor;\n    }\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n}\n"],"names":["SavitzkyGolay","data","h","options","windowSize","derivative","polynomial","Number","isInteger","RangeError","length","console","warn","half","Math","floor","np","ans","Array","weights","fullWeights","hs","constantH","isArray","pow","i","wg1","wg2","d1","d2","l","getHs","wg","d","center","count","GramPoly","m","k","s","Grampoly","GenFact","a","b","gf","j","Weight","t","n","sum","gsd","x","yIn","noiseLevel","sgOptions","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","y","slice","equalSpaced","isEqualSpaced","undefined","getNoiseLevel","yCorrection","yData","dY","ddY","SG","xData","dX","maxDdy","maxY","abs","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","index","signals","signalsLen","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","MAX_VALUE","width","soft","left","right","yLeft","yRight","height","determineRealTop","base","sort","tmp","maxDx","minDx","MAX_SAFE_INTEGER","mean","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","toString","Object","prototype","isAnyArray","object","call","endsWith","errorCalculation","parameters","parameterizedFunction","error","func","max","input","TypeError","maxValue","min","minValue","rescale","arguments","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","constructor","name","inspectData","rows","columns","maxI","maxJ","result","line","push","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","installMathOperations","AbstractMatrix","Matrix","add","value","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","fround","log","log1p","log2","round","sign","sin","sinh","sqrt","tan","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","from","columnOut","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","sumByRow","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","variance","sum1","sum2","varianceByColumn","varianceAll","size","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","reducedEchelonForm","maxRow","pivot","Error","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","Symbol","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","LUcolj","kmax","LU","isSingular","col","solve","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","iter","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","gradientFunction","evaluatedData","params","gradientDifference","paramFunction","param","auxParams","funcParam","point","matrixFunction","step","damping","gradientFunc","matrixFunc","inverseMatrix","levenbergMarquardt","maxIterations","errorTolerance","minValues","maxValues","initialValues","parLen","MIN_SAFE_INTEGER","converged","iteration","parameterValues","parameterError","iterations","sumOfGaussians","nL","optimizeGaussianSum","xy","group","opts","forEach","arr","pInit","pMin","pMax","dt","lmOptions","assign","pFit","LM","singleGaussian","factor2","optimizeSingleGaussian","peak","sumOfLorentzians","p2","optimizeLorentzianSum","singleLorentzian","optimizeSingleLorentzian","optimizePeaks","functionName","factorWidth","optimizationOptions","lastIndex","groups","groupPeaks","sampling","peaks","sampleFunction","limits","optPeaks","fitResult","to","nbPoints","sampleX","sampleY","direction","delta","mid","stop","upperLimit","lowerLimit","joinBroadPeaks","broadLines","candidates","indexes","fitted","reduce","broadenPeaks","overlap","nextPeak"],"mappings":"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"}